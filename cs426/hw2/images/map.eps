%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 725.000000 337.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 725 337
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 725 337
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /R put
dup 34 /E put
dup 35 /A put
dup 36 /D put
dup 37 /M put
dup 38 /period put
dup 39 /m put
dup 40 /d put
dup 41 /l put
dup 42 /i put
dup 43 /n put
dup 44 /e put
dup 45 /s put
dup 46 /fl put
dup 47 /a put
dup 48 /t put
dup 49 /p put
dup 50 /one put
dup 51 /K put
dup 52 /y put
dup 53 /hyphen put
dup 54 /V put
dup 55 /u put
dup 56 /space put
dup 57 /r put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 27 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/period 3 def
/one 4 def
/A 5 def
/D 6 def
/E 7 def
/K 8 def
/M 9 def
/R 10 def
/V 11 def
/a 12 def
/d 13 def
/e 14 def
/i 15 def
/l 16 def
/m 17 def
/n 18 def
/p 19 def
/r 20 def
/s 21 def
/t 22 def
/u 23 def
/y 24 def
/fl 25 def
/uni2B91 26 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926597C1DAC1BA3798797E796C89ECAEC4435602C69EF8DE4A6951510F1F56EAD7EC0A94E754F83AB6B3BD6B68DDF96AD90CC45150E6740B8358220465AD94967447004B7D711BF4170E7B790C6730B5694CDCB17A06D8EC675BF97196C43A64A12045942177A89B88F5F414B13BF710E8BE682D09254FF0A4925A8BAE89678E1D6C4C06E4A370F81AD07C95BE531CB02534BD60F29CC675FA1F3A49E2D9D94A9D079FBF63AF52240BD1299387AEFB3416E77FA358E791877120E0E1763E2F3DB72DB57C97E63CB7D599B2E5475951748F946194A52FB45F77C75B0F1987E3678EFB47A17C5D2B235357BA84A63B447EC2C2E73F911E063BC4EB6D4524D82E22BFF946CBE4A92F5BD38387B28E66BBF9780EDA1809269C1219B761A95FB9DED33FCA1C07747421D74ECAEA5275BDDCF9DBDE7DC6E5E14FBB10D7857D200B817C94C5C39DA4E66948E9C3F0B2CC70A58D5AD944850BBFBCB2962BE4E0D1FBD3D2BF0005EAB74865CA97A4A4F987D18069F0AAFD52E92ADB71C452D5991B62AC268B3C37445944727AA8FB8F51B4FD694C3CB4CE2881C25A045948BA62963DC3E84DE208343689290275B9A6C4B92312DA466C7E48B6474E4BF3060E58F9A8E1E96D7073D186A2081F389D516986738E960BE7DFE83B7A9F1484349DEE3DCAD18FC8745EDE7EA3A1739A9D8D2D65DF955001435754673928E19F7078A0C953C2239B9546A68BE1511558BCFEC7CC1F92A5C5FD84346E2AD4B6082128C6C03CCD7F29


9F7AFEF3C01538388980681EAEED2D8690C6CD358AB5EB5B13478C6A7EA00610CC2D97CC8B43FC64B203879B7C0B3523A3199DCE967FEB54F650F835C392C808F0FD69C78BD61B82C0B1F802B7DBA1C6DFEAA2861939B0B6AFFF0F094802ED12B34548BD12950F624F8B63C06B03AA13DB5AA60A0F1E57E036EF2E5431422164A0F1F58E230D770A29E4258EF7F61418BA3DF809D0B12C9C23A9E126290E5EA873B5265BDB3D2F13ED05958E03EE271A544A02EA978C5D051D38F9F669B2B32613D177B43BF82260C75A22E22C6235883F70D6F74353C1B505E620976DFA7F32B4DC3B27821C2B330B007C9C43612110E2A7E19D9621623566BCDC23BEE24C4AD0AC2B02FF19086BA0B37F96E7B0F7BEE407E6ADFFDC84DD029E67EC38E31FCB6514E228C359281F444D4BA8EB3EFD523177D6219BF0DE442945BD9669ACFBBC47E66AD3303C2D930CCBD9938E8ABE9DE180E26C9A2F1C9F1C46379626D09F14CAF350C4BE7337E8BB367295CCADD7A3EF21BBCDB4C6B97C0C38B1EF76E928D601BB38878B942A720FC514424BD1E1966D45FBA1ECCB8A8C7DCCF0AF2E4E33EE0878BE02F04C507709DD7B5B1C1085AEE65C98A220AF299B02C17B7A838710083A0831094DFBAA7C4ECA3ACB36E54617AF7CF9FAB5CB8FC1A72CB8D05402A1CE9713998F4CCDB34CC8C6379B100321F7C96F8DD3D327C09417A5A1E3C211A8F6702091CE9502C949BB53606E8D67359D3259A18E9370A888275950FF832EE6381FE86DA1CFA80259FD08728DC2137617B980832CE9F8DDD1DDF43C762BC69C43D38F09038DBA3F3A2229EE21BEE03E26C01C99B91B265F181C752D47B1720B6F4F4FCDC002871C5017843F766B28168D924C9B08640E3F0F081CFD0D18F2ED2DFBFA7853BCD1D57B15DFE709FC37D631279092937B789808C39751F9880C2FE246C2B375D112CC9C200099172A524B8C4E8E4B46D7CA4CDF909D678893F35234E97BE4EC18FF0CA19FB2E4887DF023776228C4A3151BC70C22D6762449D2CEE2B6A08619AF3B334CF97FC0C3E4E9F07827E8A80ED3E093DB85958AA55DB5C1F0832727B04BC9D59DF9938900A02ACA2ABC8A2EF8E686D816C52BE47E009BDD35EB3E5EE169B620726D5E6307151095B5E5D34B148531CAA8A369F845DDF1AFF299F5FACACED0BBB5796EF10EA3B74992B4C078406970897CB972CCD0FFBBA5B418ED17C133A1BE4D19B4EAF02238684D9AE18C2B8D299D45B1DFE856A7F3273A310D950C47DE8E01B85A86DDDAEC31ADCDE0A4A185ACF1276FF124F881222C9DBD9532E87025191EA9F0B5D7555C7F42F8913DF7F75B335333BDDAACC1B06886F2D78708CBDE4D2606493BD2794C3EB81A525DC3290CE18190D2F6327F8AEC84313445490BC9C3FC1EBFF9D8967D21F65C0C9A81B8F26EC9BAF8B6FCB6ACF724
80C298B923EAABFBEF3ECAFC10CB73762FC718E836B55DDC844D0D41A6C66817D2D5C242BB68D3687B695944C537679CFED681D76EA9277625C038D722558DAC17C2EEC3D1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: SourceCodePro-Regular
%!FontType1-1.0: SourceCodePro-Regular 1.0%%CreationDate: 5/3/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (1.0) readonly def/FullName (Source Code Pro) readonly def/FamilyName (Source Code Pro) readonly def/Weight (SnapShot) readonly def/isFixedPitch true def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /SourceCodePro-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /numbersign putdup 34 /space putdup 35 /A putdup 36 /p putdup 37 /a putdup 38 /c putdup 39 /h putdup 40 /e putdup 41 /S putdup 42 /r putdup 43 /k putdup 44 /f putdup 45 /o putdup 46 /i putdup 47 /n putdup 48 /m putdup 49 /t putdup 50 /ellipsis putdup 51 /period putreadonly def/FontBBox {-193 -454 793 1060} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF1D53D6B91083A704933106ECB17A4B7E5383F7F67A8F4B4DA84272FA8A33A4F60176B21C75079930CBF1ABF7B0CF853935C8F3C71C2026BF19BF21F77C26CAB95F0FBBDE043133DFCD2D60281EC729051F61F32BA78E3D9CB7BAC6CF6882116BF4A9A68F10F489C70CAEE2ED9674AD23469B2034AA58DF71508CD2757C5496D59449908B4CE432264D24600E1FF144BC272382DD3A8AA4813CC33A5D2049692C3DC9CB475E2162EE985D2F3A5D2F7EA930F8724777801F5B1203BAE26C30E82BA7A078D40EA47AFD036181B747667F5F57E643A16893F7F76462A503637E23798EAC578AFB3DD8AEED91996BDB6ED549BE1379287F9FA97DD9557679F7C0132287D48C0DF8ED8DC24526F87522397522F5150E8E961E641E858C6089D9E6BAA98579EDDC70A65C3AF61CD416B6CCE755CC44D43AA88690DDB8BA00D9D532C445BCBAE62575A8752EAAF7AEE785C21C249A2C1132A955F99576E27E44AC66CFEEFBABB9BCD30BD3D0670DC42FE446A22F79FEAA87DE71B2C402F43309BAC09D2F2C707F708DFD5C2EC4F97C47245838D60D40CF0C59730DD827D0A21A0CABBD90EEAFF4CDC6A925408A4FC49B524D185368B5B41BBD19E68FA931B53DB25EC9B58A98509667D150D2CE740E336CD1EA02074F86F598B1DC25CD6579219231A185942A9FFF0FB340B20F43B8EDFD2C82ED5D843D83C88E2FF57967E8C53C3260F71719842ECE0FE07EB34F44A11EC7912548BE93F98AD78D73DD5050FAAB93820239B1FF865CAED1B3CD0EEEF26078682DDF961336F31DC3CC6D9BDB99A8211D54451A81745D306F68CD6A917E3E27A7C9A37775DE3F3B6B05B735EAD27F9A6EBEB3665B53F0D53C647DFEDAE116C5121D21A8555CEA65EEAF5728A8248360A8D6B1B4880E5A05874892D9EDFBCCE3DF5369F5A11D5B97E9A4C824018D8E02722D05CFE74D3E56C3C8508AA0CAD7F361C807592BB8CCBACBA715C9CF86488920C54155F94DA5685EE61F92F039AF3673CC4FB64AA39F6AE674D7ECCD4851713DD8A4D241D3A33CA251F20CDB0C299F864F748296DFAAEB5BE5814F199F98B51DA4BAB0C03FBD0028B776C732F5CA4155B1B46E5834A11E1F5714B8F413B974C44E2AAF4991928D96119BF308E60DE3D3C8C76BD626D1DFB487A6788D506002053C66553F4FD3DE0B3953DE3A593917BA0D518E4AB050C311D69783B456E4B621436CA0E66038286796D15B722AE1908F863E898BA402CF1C43B9056F4ADA27EE5A60D017839543DFA9EC90F442281D965FFB0F1ABD9ABB090151AD440B8578C54A8329A6BA2B2BC3F3BE9B8AC9323CCA3411A062BB4CE44616C9241284D0540DB2578DC6ABDA7733C99DAE9BD8A56D9A4F56375EBA1BEE582D262B45CC6AEC5A99DB203E7D07D38D81D51F623F9DBEB79DF1C9301AD37AE8F28C2A1743E373B507C740903BF046CC7482E09EA21B117D27776AAA09EE776D5F4B2F8DA89DEEF4A0A114A2B488C64675178F62D8BA9508B061CBE46C6B5746EA2C2AAB4B465D2C9AEC5AFF97FB332CA1BFCB1EF5AFE0996327A12D07BE490D7C94D91EFA9E6648D13C5D056A8097E2A76C52CAC2C13BDE861E3D5CCD3C8760F0598316EFEB328FA4A78A906E0AC1B976F9793CD69ECE86B77EB99507F8A718B240BAADA76C492D2B83D060AE422C70848F005056326B724559C83CEC40354FDE81D8D8A1B274B048BA7B6B06AFC551047E005F051D8C867372D9E51DBEC9AC2A7F2777F8CCB5B7CE83FC378F874E00197B759CE1BB670A4BEB8F49BEA1CCCE2058660044DEFFF0D60D46AEFFD5168EC107C3F67286D0588576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88AA072958C75F616D976EC60CA1EDBE4DD390CC2C8A6D27F5BFEEBB9FF5D8D2FD3858D99EE2102FC3B6921512946A9B58359504095EC203AAB153D2E873160F038ED46EB7E3A7512D59605A698FCBD4772EB57C6CE65D92428B8AE0ECA159D78385B2808BD3FEB216EC9F9CCC606BDDC904FEC030B48526A8B73B6DE92DD9CD2B90503A8C24390C0ADE13EE9503DB6FB5CE3FE9376D3855DB2780A3E76B3B3C6A256835728DB5B679F2FB691E4031281A7948C2293D469FC0D3CA85C4DFC6B045911C298AB85CDD6AD8520D7AE972F30E08F57A71D5A5DEDBBAEA7D70681FD4BE50BBCE981ED10B15DD6523856A0B0FC5098360A0D1E6174C1046B0F4D40BC00D064CF276FEB97A90E87958CB4DB5FBDB53FE17473DDA8984ECE278CECFEAB0B4BC12BB9769B1A42CE0DCE62BF098DC9F1E6B208405298A95AB5F4CF7BB505B0CDB441D12B09857AC65B05E9F4B63656CAF8138044523F37507CC5436D414F64D7112AE8B62CB66D0B6E045F1CEBD479F378778EBFE49A6F507C3EF92BDEDFB752B7692C4D541EF87DB2F06F1B52CB811FAA7CA6B65EB971D6F68272A03735A75C1DA55D877E0ABEEF1AAF95B578ECF8D267E3511E742C3732BD86F5A4A0AAB17E11B7A187764FAE3BE29459DDC57A5119AC7E5AA43795107D537B2BBEE09170E4ECF55A01B81C7DB73821DF95FEC0EE50964512BE565473889F8B82346B16F4E7D90E2353A6D18FBDE5BAF0D5E59E7F791FF46510D6C3BFB0BBE11FEDF09A6C4341CE8DBFA7911E1783A9949FF621E12DC1463DDEEC9FEFC9630F0B9C54F6384FA5FDA91DAE6ACD99C815674E6D4202D2A57DB8AE4270F736963E95C034B45D9F0ECDF42BA96463E5D02DDB00188B535EA1029EC336606DCE1401895B9F0BA27B7F6F51269A58B5B4DEB12D80878BECBBD6BCFE26915C050AC3030E86400E8EA57402CE1E0EC148F8323B948882CC17EE9A9E0AE066D64FCB44F1F0CE23984693A04B9179227214DB143405DF947CF20B5A0F7F02D1D14CBDDBD4C2393F806774F836809202C2263590B86B8DC63ACB6813C78791C87038F7A50E2967ECEB178F0A3EE0EA6BFB64B62261FB18FB967B1F8C3F79B2FE662EC117E08C0F15EBB0A202CAFDC31D3D3A7F5293F830A190E644A97574872981C10C309DB457E237FED0FC4DA3005D0F4544BA7F117C4A0644F31E5611E17AE979B0CD9BFB0A540E511AEE736FA19D1434F5B5A9D94AAF8001A2FE6699C17C9DB918024E7665D38794355609E6BCECD3C986F7F8D846746F9D87D80CF6688E797E11DA4910287495F6433FC6D4DED0EE6964363BA26A072D4C06D7F0DAD7A7D7FB86B05D1443F37512DC01FA0662B383CBAFFBDC9FB45722A287BAF84ECCD564FBAFCAA95367DF391E5BEBC3AA1BBCFDF7C371B1BD5039B1C33E832C4B075F8C48FC2AFC787834FB8B95C86AB93CBC898425B6BFC06AAC064BA20145382AB5399F5BEF7C8304A8732E9D968936EC90CA3AE4D9BA903A39CBBA56E34A6E1E10ADC60A31BB388E0B49C1D0784F32D952297B1859C72C38FC9F8E9A2765043563D5CA9B980F848C69D23270ADF6389EC6915C3319F07D93DAB0A94195E778E4476847AFE8A01FD2B3163D0E3A110FDB35A1A8B4F5707E04F1F1D126D6CE7D73B3A860C7043A998B3F6297BBBC8CBAEFDAE889C800290CC9D9A4A1BD918D395A1F9FEA4C23F8F4A0282E8BA1D67A471FDC35BE3819ABB121C59AF8540D2C65A7718E960A19DBC558586DAA2B3406B2C3C6597CD0EC2810B8DEF3291AB4D899A4F691306BA22F00D888E49D65697098D5B9479DC2965CBA2AA99E04CB1DA72108B3DDF98332DEB0A4C544D0D22FBEED54D2C73F432CA73DED6130433F488855C47C5641DD5424809E30A65DAD0F983B4E499220D61BC1E3A6A865D85E47DE7330C22B14AFDAF68FF8683CCB7AB3160A8179ED137D8C7C97CBD55AEDA2240DEA40BC6707D37B48D110665CFBA910FD1749BA2FA3746CBB73D9F311AB0F9E1F1D2B437C01203D2939E89A1F18A4ADE840864F947AA62DFA95324ABC738E09112491C1B2B268C331439F2B72D5E0BE3EE475FB99C45F467A8554776F3FBD6A30BE83D5E4913E76C2F08390B40696F09A4292D42128AC47A8ABFB7055FC1AF6326C4BC69A50D3ECA3E9C20240D3A65D344488BC8B6E8086DCF1A04349E61F33C811BB8388FCEC80B9EDF289DC6EA307E8F27A5BD0332FBE14335B48193C9B34DB24CCE4C780C9CB16CE5FA2D1D7D4AFC918AE4456DEF573F4CEE8D6FFA0EB63CDD09018E5E9E3860CF43D42F866A765D93A53AA7ADF320788AE92FF46781BAB03D6416F5AF54CBA211D140C756C68742C45B4D3B1817E08673A85EABB084A46BE5B2CA3C9B0AEC5FF8A0FCA6BFA93D78567514D97BC88DDBAA400673F6466ECDB1F994EEAF3D3B9D508722FB7F60CD5A6D32F47BE52BFECDD83BF6C8E2CF5C3F2C354D192123101F005776D391A587EB91CD5521075B0535AA37CF76B44FC603870E7EBCAEAD90F25263DC02FACB18810CCA5C8DC70C57CC3067D9387E6572E77FDF0782D65F62BB5BC90A7B5C6DF360BA3FAE19C1C4F15AB472B92AFA433E9A3A7DB7D20AE9888D6BBF255E9E37A2DD633F5C8846EA315950609927DE21EAD2762868CC38D21C64F5232F5308912B305447F69DCDD09591EF97C9416682FD068AB43DD4265C6004306F57E8FD977F6CFDE8B59827396EB193E304FC9A7A5E032F586258509FD53D8FB8A7E48808E37CDAD43D250E1BCD381CE269DF09A009519B0269B18BDDB59D27B474337AE3AE3E0AF2A24F7D7BBA3A953E7E870225DB5CBA25FA42F8D1B001DAE5A1FBAD7F98FA3F4B853BE153D7CB50A88BC2AC8D4C0EB91423F8073BF631F828F830141D19EDEF60EC69D043CC35139CCD5EA1A42778973B08A5E7315C57B8B51438D79A0371A24554EBB99318851BF67A961AA77CBB1FBF65175A907F6607D2393B4AF7477E5A9477F778E0CB7FE409F2417CE78F99E0A2A860BA9D2F05CF5E9B120C4E99167D54BAD918179CF9006224635E8D1DE881864A3320D9AB4B5CB4FBBE2EA9935E309DFCE935D5F53CE8564D07C0FCB9769A14DD3A4F44FE8D0BC52464ED1751B549C6755ACC75B4B9A927C66F714D36B85BB9DBA804E3DDD1C1DE619DFD791DD4DC018043537ED6E61A96631AAEF77B9653B3120F255B9474D77FB1023E8ACF96920D043740AAD450A3A19512120164B6FF5C0A881423C01CD81D2F727668AF51E07775709D4102B252147F55A0E4A8AC90E63A07849EA14A3B0493DAF1F0F2C04C88B4FC501E2C69B84905383027756E05D1247C402ABC7545BC009BF02E9E50EDEE778259ED950254BD6CEFDC6CEBB0E6AFADC758C76FE9B448D12711856F2F6B48F6AC9DC1F8B3A3BFEA6517D813AEFB88F5A2C1BFA94167AF5114630BA27B369F916F1C54889BC7F7BA001388A321DDBDC4305F8A0122BEE36915D2433A3D8F2C1B5F972EDA8581F7FF2EBBFEA262D1EA87E4FA5F61F359C13FC8A663B5DD707AF279F6D4AC3994B5AA83B40B25A536CEEF98528524D66439BA387402696DDB05021929FE80E5825863A37BA42532A5C5D8980959BA2557255284C4C8CBD16BCF5B202EA17F6BC6A1E69DEC29EABAF3492D71E307F61D3941F8737A05112AA126B5073707CF197878DDAF49D0A64949F2FF177515488082E47EE020A9776B7B1804FCF408DCEB7F85B4209E1DF1B33248C8589956BD67E3453F3242AFA2E3531AAF4FA1968E4E5F5CA45AFF874CB9880C32F2AB275EDA64994EFC625E498A55E7626FE84FD26178C66536A9BC3E26B0533B5A7F93CEE3E9E076E3C357A9AEF47057177C07F4352D12223CE57ABC904591928114DA3D9025772E8C65A36555B8DAA66B0F2E512B638AEF38B403FE2D3559A887BC98F4F2B77D1D07500607469DE0068A2E3FB43EBAC56C66F9C990C552FF983AA58C14D10394FF5013C40B7C873E065BBD9A8EFD01CD1206B43C61DF3E0EF0FD99973C801182FB0FD29A7D823D92A4092A790F2BC242494843BB6D5780BA8E9AB9DDE57408503F0F99793E2A94C550EE0BCC61629A84B5762F380FED80E7BEA78F4DA3C480476F9FFADE241E8EAE369931B6A5049213F9B88C72D5C28251AD180AE8CC31D58957629DE8AF1C5CE3D204FFB795EDEA57EAA71EDF4E128B28BF8D36BE05C0D2A8B27B4BB21BDE02338B5C9570E76EA2AFDC8FE0E93D809A2C7841D7B3173AE6CC5C4E008A426F9D1C4FF39C6F2E8FABBABD604214137123EF6219FA8A31D212D97969B40C99E43A359BF32BADC3FBD7416BB5B04689E23473F16BEA46DC2398FA0E9C13CE5DEF3CA373E79FF140787C0BB7105D1EE6B9E17FBC46691815739B2E34F5CBAD994ACFC8E92DE356B0A44CAE51D26045D0108463139278F012ACC91558508AE0809353F95E01A646AD938C36478DA43B906BAD8A787A514ECD0031B36AA12D1CCEBA8426670F1EAD1CA6AADEEAE423D1DCF66DC4EFB865ED1E7CB841665C21C5F2E80F54591B97581217E2EE86AC96BF23188A519E56F579449D3BA4F0714A116BCF2CF6944DB7896F67E3CCDA7D701C6C0292581C0643895785A92C95809A996FEEFABA1B7AD8515A20F582043A65018CA26B633E4201850F78C65EF901253C4AEF3067E9168258F3655806657BB1471036171FA1FE7E316FF0F075BBFB85CD5541DB70A499567FDB29EA3140D8535D679EE58D769E398365066AFE17A49273D0CFBB27039FFF4AC136C5FC8C0F717CDCE4DDB105121244A26C450DCF69F42D06C6445213BFB016251C85EC328BFDB2AD19729C4669D9C97378A1185A191BC66DEDB187ACB590E6B5D673E24E5B1EFBF79BDC09ED7076F3CF45FFD3B454CE92A599165320AB0C0C2C633885297E6CD66FB4A7925895E03B35E7CB1DF0418D10B3D65ADD945D3145866A5833A5D6DA29E7B0526BBDA5DE452A0933523A3BE59AD756E41D548D9C84F7ECEB44A7ABCA4A90FF1AB84B8CE74DA96C4BCC13F313FD35431F899B59CC62CFCD9281573E9417A411B55D6D5B53BF936F1CECCD18726C24AF33FA71DA8CCCAF480DCDE895F863CFBAA4CB9D0808879A3904296BC0CCB1B5C82C2F9AA9347C56345DCABC192096B5F2D3358C193FDB4225905B77CC0C8C21A0DB64B68D0BDD1DED2FB0606D7DD6287B0E05A041B5442F59A6089314956B50AFAFD74FA2D1E78184D93305360E155025E3FE622745D76BE5534267622511681B481C909334DF3045E2C3AB6BA57817291513D78DB1C970B27B955EC5AB465AF5CB5EBD3BCFF8E335947F0D41616087660D1494E1C06A84765CDE32945942FD4B441FA257E06F56F0F1AA20ECDF4F570EDAD4421EE6709C225E2EDEB7C7742C27C0222446D822DCC97B0B3128F326A2E91AE994C8578A41502C358E01A44B7EFC4F9E11CD85F3210021C67D3C3FEEF12CE54E0AAFE3AF93D29C4A8229BB7E539D2F953B0B9DB33D622C1875405E1295178F588F812C6061C49D39712E8D23D402E55D227CFEB8890CBF21739001F10E724A7A85303ECC7F8932922EDC2D7F7E1D23A2723AD4D0749DC05FFE32A88F528FD2F5F63566E2019CE536412F750E7496057F77832FB1EA229F5AED3334D033C7EF989C1358CF16DC076DBB5214643B76F3B5E4D8D755DD0F6256486E345D4420AB1E1487558D2AC727ADB516E37F5E7B71D89B7F06149897A55EE182D6B5CEA80224BB6DF8A839E88CCD0003F30419E441E5B16743BD14CFC8BF4336DCE5CF17DFD9067916D6684376E40F6654B45CF1F6AED8D743E9F1F08F9943033DAF0EA2688C93F791C3F0C44844218CD49F70AD830556A980ED4E756070E8E8597874C96E819B5F966D91805C42C589A12992AB917C97D4E964CDDA732C3AAE7C90F7F1FF22437B8F798955067C49615C702DC2CC1D18539ADE8B693544AC18DCF7A225327AD8A4FE285AFD6933B13E26C39EBC3FBA65D33EE1C61AA28B742E73F2DB2DEF568D611318433D93614FDBCFB779BCA95D708D5D00FB7C072427CB371BB076198AD54253400A988BA8903DBE5199BA69DBE2D544F57B8140BEC17E6D7EF28EC1B8A10F1EB58D4E1E7311CA9357686CCECE8C613318B6B28DF8574F5EF8CB3E51FC4409428C648A866D26B9A083A5A69EEB8584D6AC888FD7B4C5F1D7C966D909561AB6473E7C2541CBEB3E1E978372A39F5BE217A81DA43CC7FB22FC6F307761CB99C9B6083329E2CDA61D7589EAC21D1AC0B40DA40C5C331273578ED414D6FA40AEC9E8A3D579CEC77309C031C3F300E5D1304242E9A5E28527EB3993AB9881483E5D0D68BF546FE0A22C02449FF21030376149FC936EDBDE01B76C343B511318CED95F2367DF557CDB6116114995FAAC9693057538550028BCA94497E7FEEBC4A63D583CEF2F5B929DA6EE940FEF4DD2071870D6A60326039CA5DC080E36CF7E6EE4E4B716EBD892AEAB4505D7A522B44CCCC8E8C20190347BBC94BB28416D4800AEB2FAACB90B2E4EF79615F44312E7580A05616C622903311B695E4A157065ACA5003B10F0DBF667A4E8B57E15338CC697DF2CEF9406C030BE373A9A47795D70C209EF633E5AD42DC676102B0B9E22A47C4CCC11BC2175C2ACAE24A26931009B27766F8F85000417FAEF30B1FE33CE1AFDBD0784A4F6879C1944693DF2B781EC57C12C0EA52C6D9DE5F98B60DE7C9EB8C6DA1E31FD2D5FEC56D0CC7E0CC76D459664EEE014CF863441C51E317A1C289524FC53ABBDBB3564DD57A163BA9E2AA165D223235822B02104DB2D193E63E96D1E71315EFFEB8904DE816100C179C5820BECC51FFB363A4E84944E6CC16BE6FA8712337CEA72654B3844F82D6307DC98E3B0B106EFBEC7A324C205A3A4E9EB2255F9999F022AED7A3837FB0BA36E8D9F6CFCF334CF9A7F0C1FF2BA882944E6E8DB1134EB4B63BBB62B2F5C02E3E02A59FB90370C132E5303724F4E4385B5C77960C2BF81ABFA19A995FF368F809F16D8E4DAD0F789D03B930F559F8A7DEBB00ECCE3345CDDCB86C0BF4B0F20EE879EED1B7ED23F1CD08E9DE058E6EEA50D258DA5DF12FC8D86620BD2DEFA6A68D630A7C9FF2245DDFA59819F6CF7F3CD3589DD7E03559402A949E60A9F3D2C1E9DA7A0F23F6310A72090AD33384CBA367C157DF5F8C566081F1D27C362C0392A0C8610B6002DDDB4BC93CDEF97FEBC79CE47A0675DBF2E88496AE2D4882AB57E8002CFA847F4493E7A3827635B3CE94B17B1E10BDA7B8B024F542CC8A392CE53A98BA45E2E4567A661D1B51D09D926E188C2A57232BF2538D5CF286BE971BAB9A150AD82322789588C98CC8F818A54318FCC70E8A60966E9B6F104FDDFFE237AB86FE4701AD95B76F2404BCD169F51CED6170253AF882F9FAE484FD8D88C5E9C2555ECAB5F4B1CA8B9980455608023F1D0D2ECF80363AD08A9C1AB794F742E119362D4CCB4A02C4BB0FEECDB11876000AF43682019CE620BF7C0B55CF2F5CF8FFE600C9F82EBDC4A90FB01A380882D5B57510C918F29EC4F5EE9516335B3FADF1651070C668BE2C08065A1267209DAE43DE429227D5E961511B06934247C7518D63C0FB153CBEF168D8F49FE1EC65F4BAB5FF3365D2961A63A1A0577CE45B7E542339F08E93BCCB2D5EDCB1261B62C2A17B32B7C8F2A54DFDE784B148D7F279A990B970F66C62E410B00CC8D9355B6D11E75EE5655EFB318FF92DD6020A93F42B5802BA6BB25CCFFCB75E5FD791DFB0FD796B6D7CCBF3D0EDD5FF934D41422DEEA7ADCCC4760C903E8CDE8FF1AA4444585A4736B1045640003D2833CD90C1ABB4588F762FA4489D50AFA45BEF6E170C1C72EBA4D700E249F70FF80D7672AC063099FD3206BD01B668A220FC196679318C069BFE48E7587E020830B803150915CB935AE9CFE1574B2F95CC80284C04FE84B6DE7D364D5CE4021B8D5880FCF8FDB4118B277E6C8F7EFB8CDE20E052141DFFB969DCAEC83E510AB6D1B80C02E590902BF80E01699818E10AC5C7386018AB412A244B8C71F162F67E620C83E9FAB8D31E77AB55985C013859445FFEFB664ACC57874F4992EEEB3CF2EF28A44F9644A0379A6CC56886919753B9C69076A91E15CAA761D82EF2F444F6B5AA1FE27636A78F5A551B17C66C0813AAA1EE4819324F3ACBA7759E5BFEC508BED3F1C94759EC0A3887B4D45B3A361C133D800C8FB7EDBAC8027E670060ACC4B9401E104EF355C93CCC1255F2845867128BF121B764E937B694F26909D223FC7D279D73689951C15D84753D32A4255A830EF47540203F02FBBBE8CFB0AF63B28D2F5750AB36C5F871BC29B88E661798BD660BF1C89EC4E02E3F129329B521EE4225F3943006792BE70846BBA9686953B8DB19826479A0224440B81C01D5D59AC7E8C7F0ED96C770FA79A4A3D58564D706E4BD17CFE8B78D8C3775424769AD11C53BED898AD1A18C2CD22E5ADE797FD638040BD508E79648D9D0C66EED79BDF063C8003D24380A6E64CEEAC6919912821E388A09E05CB341A043D1C6EAED10072387D3EE43C266E01495375D4060CE970D755DD77981EEF4F751A170E632B6F71D64C36E7FC9BF482D919AF7DC348D559876D4AB354DB48CC23B7CAE55E24D1E559F6307A168CD3CA6F7EEA0E3F435AF5151C7F3C4578CC738897B79C7C8B78DAA776E2B294F0958A3175E691E96009678BB31EC4F9E29E3C7FB1ABD3957F998A1EBF80688108A502277C2713867913865A62232312D95A0125B3F138799B01B1877D4533B853CCC7ECE6B2E563947A8ACD0CD3DE3F24502E616922F07E1A97109995A487927082DE40E5D0F9A1FF9FA16F004BFAE5487CFBD0A1144376ECFD7C1D0EB1526CBB2C89ED228D0224CF0966D9734B99DF9F5D701E792772A068B4CEFE3FBE028D514C87AE8A9D534B3BAF3A40437DFF639C45E9B7EF1300E9086B6D8D85969C75FF4871CE4DA77067E9F816D8F27BAA0B5ED2EC490FF2AB03062038EA7094B1C77045A2DE96F22C478BCE0B7790D616F7EB74392E8232D0BBDE81619D1B55FFB645512E918F8501EC8E75C1B4E97EE6DD65CBC559F302AAEA7C68A516738AF0D726A4AC5F199ED0192918EA4EABAB86810F2421795238E5EA0618BC16D9D8D4B79CAC4E586BFD36012F2662C2AC4745E1D956FE49891D912399E84090C5589239B589D08A10799973E81E9A70C3822CE896252E759CFBCB6A467DEA3ABABD57BD44BBCFCD46CE9C15A1DF8FBCA4B1706617FFED056485929381F903BBF91F608F64B44058F7A17D436BF9B877E5F1F12C9FCEA9B6C201A7F7AF11A27414D6EB4EC44EE946A024A953D9F97B526AC9C38154219F4EBD2AD226B6A5F542E05406D44DF06DB25651C9E60B3A550BD604103CE100C5103B0E48C5E6EC91C408E20EFFF2A03BBA1DA210F1E379AE72314A49FD950FADE7F1E272E942FA2594BA2201449BA714BB837EA95DFD4A3FB81B4F8C1CF0E966F2648E40613326D3F7E9D79DBEC144C5813D751027A2E7F5AB24FBF9C5718F3A9F9F251371A26F58C30141B4BBE3E2ED750DD28986442CA8314B08A63B409FE930F8613DFEA5B34737E0F7EFC55FEFA33A6632F8B3DB9B36B4F2E62ECF309BE4231563999496AB780A75E881DC048F391BEDA9D822FAEA544F6776F4BC751F978814E5DD6728B290A34AA541794A813F4448A5AF6CA7FDD639E55FE1A7AB2E7F9CDB1BC21A51A5A79726FB72BEB595271CDD8C6B8612064088FCCCB8ED0F0751CF701417EA007C805F04387D069F9C3A17A6864C799CA3360C969517C847A432B50B453EFB4DB5A27D5B78ADB941444DBFC344B54B11ABBEA42720EEEA7A89B45349D46E1463FF90871F74E6493B3501C54B1363B9691259A4B3F6BB3753ECEA42B3C299CB5A9D3B848E22C7328EEEB294FC47FACECC17072362DCE7934A2E6E121521B53CC7116C667D63FEB8C38E30492E5E0EB24B1466C1CA4C5A3156F650EBD72E99B3D8AF400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/SourceCodePro-Regular cguidfix
/F2.1/SourceCodePro-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 725 337 rc
0 337 m
725 337 l
725 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1470 1464 m
2691 1464 l
2691 -1311 l
-1470 -1311 l
h
-1470 1464 m
f
0.60000002 0.60000002 0.60000002 sc
15 167 m
124 167 l
124 125 l
15 125 l
h
15 167 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
98 372 m
207 372 l
207 414 l
98 414 l
h
98 372 m
S
1 1 1 sc
0 i
1 0 0 -1 69.5 146 cm
/F1.1[ 16 0 0 -16 0 0]sf
-46.832001 5.776001 m
(!"#$%"&'\()[ 10.960000 9.776000 10.368000 11.264000 13.936000 9.776000 4.448000 13.648000 0.000000 ] xS
CM
163 244 m
327 244 l
327 213 l
163 213 l
h
163 244 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
246 295 m
410 295 l
410 326 l
246 326 l
h
246 295 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 245 228.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-67.199997 6 m
(!"#$%&'\("\)$%*+)[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 245 150 cm
/F1.1[ 16 0 0 -16 0 0]sf
-2.224 -12.671997 m
(&)s
-2.224 5.776001 m
(&)s
-2.224 24.223999 m
(&)s
/Cs2 SC
1 1 1 sc
CM
150 87 m
340 87 l
340 56 l
150 56 l
h
150 87 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
233 452 m
423 452 l
423 483 l
233 483 l
h
233 452 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 245 71.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-81.599998 6 m
(,-*"./,-*0%1.-/"2)[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
1 0 0 -1 245 279 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16.296 5.776001 m
(\)*+,-)[ 3.552000 3.552000 8.896000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -83 539 cm
197.17273 372 m
295.02728 326 l
S
201.9698 414 m
291.48657 452 l
S
207 381.68909 m
291.14062 364.22656 l
291.20703 364.63281 l
290.94922 364.27344 l
290.80859 364.07031 l
S
207 393.2688 m
289.51562 393.67578 l
S
207 404.65952 m
288.05469 422 l
S
0 i
1 1 0 sc
CM
348 138.25 m
348 153.75 l
409 153.75 l
409 161.5 l
420 146 l
409 130.5 l
409 138.25 l
h
348 138.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
431 400.75 m
431 385.25 l
492 385.25 l
492 377.5 l
503 393 l
492 408.5 l
492 400.75 l
h
431 400.75 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 380 184 cm
-26.823999 5.776001 m
(./0'/1)[ 8.288000 8.592000 5.040000 13.648000 8.592000 0.000000 ] xS
/Cs2 SC
0 0 1 sc
CM
431 281 m
489 281 l
489 258 l
431 258 l
h
431 281 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
514 258 m
572 258 l
572 281 l
514 281 l
h
514 258 m
S
1 1 1 sc
0 i
1 0 0 -1 460 269.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-4.8000002 6 m
(!)s
1 0 0 sc
CM
431 242 m
489 242 l
489 219 l
431 219 l
h
431 242 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
514 297 m
572 297 l
572 320 l
514 320 l
h
514 297 m
S
1 1 1 sc
0 i
1 0 0 -1 460 230.5 cm
/F2.1[ 13 0 0 -13 0 0]sf
-23.4 4.5 m
(#$%&'\()[ 7.800000 7.800000 7.800000 7.800000 7.800000 0.000000 ] xS
1 0 1 sc
CM
431 203 m
489 203 l
489 180 l
431 180 l
h
431 203 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
514 336 m
572 336 l
572 359 l
514 359 l
h
514 336 m
S
1 1 1 sc
0 i
1 0 0 -1 460 191.5 cm
/F2.1[ 14 0 0 -14 0 0]sf
-21 5 m
(\)$%*+)[ 8.400000 8.400000 8.400000 8.400000 0.000000 ] xS
0 1 0 sc
CM
431 124 m
489 124 l
489 101 l
431 101 l
h
431 124 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
514 415 m
572 415 l
572 438 l
514 438 l
h
514 415 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 460 112.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-14.4 6 m
(,-*)[ 9.600000 9.600000 0.000000 ] xS
/Cs2 SC
0 1 1 sc
CM
431 85 m
489 85 l
489 62 l
431 62 l
h
431 85 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
514 454 m
572 454 l
572 477 l
514 477 l
h
514 454 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 460 73.5 cm
/F2.1[ 7 0 0 -7 0 0]sf
-23.1 2.5 m
(./,-*0%1.-/)[ 4.200000 4.200000 4.200000 4.200000 4.200000 4.200000 4.200000 4.200000 4.200000 4.200000 0.000000 ] xS
/Cs2 SC
1 1 0 sc
CM
431 46 m
489 46 l
489 23 l
431 23 l
h
431 46 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
514 493 m
572 493 l
572 516 l
514 516 l
h
514 493 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 460 34.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.6000004 6 m
(-/)[ 9.600000 0.000000 ] xS
1 0 0 -1 460 152 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.39 -8.4199982 m
(&)s
-1.39 3.8600006 m
(&)s
-1.39 16.139999 m
(&)s
/Cs2 SC
1 0 0 sc
CM
505 263.75 m
505 275.25 l
536 275.25 l
536 281 l
547 269.5 l
536 258 l
536 263.75 l
h
505 263.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
588 275.25 m
588 263.75 l
619 263.75 l
619 258 l
630 269.5 l
619 281 l
619 275.25 l
h
588 275.25 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 526 287 cm
/F1.1[ 12 0 0 -12 0 0]sf
-11.898 3.8320007 m
('/1)[ 10.236000 6.444000 0.000000 ] xS
/Cs2 SC
1 0 0 sc
CM
505 224.75 m
505 236.25 l
536 236.25 l
536 242 l
547 230.5 l
536 219 l
536 224.75 l
h
505 224.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
588 314.25 m
588 302.75 l
619 302.75 l
619 297 l
630 308.5 l
619 320 l
619 314.25 l
h
588 314.25 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 526 248 cm
-11.898 3.8320007 m
('/1)[ 10.236000 6.444000 0.000000 ] xS
/Cs2 SC
1 0 0 sc
CM
505 185.75 m
505 197.25 l
536 197.25 l
536 203 l
547 191.5 l
536 180 l
536 185.75 l
h
505 185.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
588 353.25 m
588 341.75 l
619 341.75 l
619 336 l
630 347.5 l
619 359 l
619 353.25 l
h
588 353.25 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 526 209 cm
-11.898 3.8320007 m
('/1)[ 10.236000 6.444000 0.000000 ] xS
/Cs2 SC
1 0 0 sc
CM
505 106.75 m
505 118.25 l
536 118.25 l
536 124 l
547 112.5 l
536 101 l
536 106.75 l
h
505 106.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
588 432.25 m
588 420.75 l
619 420.75 l
619 415 l
630 426.5 l
619 438 l
619 432.25 l
h
588 432.25 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 526 130 cm
-11.898 3.8320007 m
('/1)[ 10.236000 6.444000 0.000000 ] xS
/Cs2 SC
1 0 0 sc
CM
505 67.75 m
505 79.25 l
536 79.25 l
536 85 l
547 73.5 l
536 62 l
536 67.75 l
h
505 67.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
588 471.25 m
588 459.75 l
619 459.75 l
619 454 l
630 465.5 l
619 477 l
619 471.25 l
h
588 471.25 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 526 91 cm
-11.898 3.8320007 m
('/1)[ 10.236000 6.444000 0.000000 ] xS
/Cs2 SC
1 0 0 sc
CM
505 28.75 m
505 40.25 l
536 40.25 l
536 46 l
547 34.5 l
536 23 l
536 28.75 l
h
505 28.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
588 510.25 m
588 498.75 l
619 498.75 l
619 493 l
630 504.5 l
619 516 l
619 510.25 l
h
588 510.25 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 526 52 cm
-11.898 3.8320007 m
('/1)[ 10.236000 6.444000 0.000000 ] xS
/Cs2 SC
1 0 0 sc
CM
605 246 m
647 228.5 l
605 211 l
563 228.5 l
h
605 246 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
688 293 m
730 310.5 l
688 328 l
646 310.5 l
h
688 293 m
S
1 1 1 sc
0 i
1 0 0 -1 605 228.5 cm
/F2.1[ 13 0 0 -13 0 0]sf
-22.559999 4.1500001 m
(#$%&'\()[ 7.800000 7.800000 7.800000 7.800000 7.800000 0.000000 ] xS
0 0 1 sc
CM
605 287 m
647 269.5 l
605 252 l
563 269.5 l
h
605 287 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
688 252 m
730 269.5 l
688 287 l
646 269.5 l
h
688 252 m
S
1 1 1 sc
0 i
1 0 0 -1 605 269.5 cm
-3.0599999 4.1500001 m
(!)s
1 0 1 sc
CM
605 205 m
647 187.5 l
605 170 l
563 187.5 l
h
605 205 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
688 334 m
730 351.5 l
688 369 l
646 351.5 l
h
688 334 m
S
1 1 1 sc
0 i
1 0 0 -1 605 187.5 cm
-18.66 4.1500001 m
(\)$%*+)[ 7.800000 7.800000 7.800000 7.800000 0.000000 ] xS
0 1 1 sc
CM
605 91 m
647 73.5 l
605 56 l
563 73.5 l
h
605 91 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
688 448 m
730 465.5 l
688 483 l
646 465.5 l
h
688 448 m
S
0 i
1 0 0 -1 605 73.5 cm
-6.96 4.1500001 m
(33)[ 7.800000 0.000000 ] xS
0 1 0 sc
CM
605 132 m
647 114.5 l
605 97 l
563 114.5 l
h
605 132 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
688 407 m
730 424.5 l
688 442 l
646 424.5 l
h
688 407 m
S
0 i
1 0 0 -1 605 114.5 cm
-10.86 4.1500001 m
(,-*)[ 7.800000 7.800000 0.000000 ] xS
1 1 0 sc
CM
605 50 m
647 32.5 l
605 15 l
563 32.5 l
h
605 50 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
688 489 m
730 506.5 l
688 524 l
646 506.5 l
h
688 489 m
S
0 i
1 0 0 -1 605 32.5 cm
-6.96 4.1500001 m
(-/)[ 7.800000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 605 148 cm
/F1.1[ 7 0 0 -7 0 0]sf
-0.97299999 -5.2939987 m
(&)s
-0.97299999 2.9020004 m
(&)s
-0.97299999 11.098 m
(&)s
/Cs2 SC
1 0.25 0.25 sc
CM
668.40002 283 m
710 283 l
699.59998 258 l
658 258 l
h
668.40002 283 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
751.40002 256 m
793 256 l
782.59998 281 l
741 281 l
h
751.40002 256 m
S
1 1 1 sc
0 i
1 0 0 -1 684 270.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-4.448 5.776001 m
(2)s
/Cs1 SC
0 sc
1 0 0 -1 642.5 308 cm
-55.712002 5.776001 m
(3,456/\)7,81/*9-)[ 10.672000 8.592000 8.000000 6.224000 8.896000 8.592000 3.552000 8.896000 8.592000 4.448000 9.488000 8.592000 3.552000 5.328000 0.000000 ] xS
/Cs2 SC
1 0.25 0.25 sc
CM
668.40002 241 m
710 241 l
699.59998 216 l
658 216 l
h
668.40002 241 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
751.40002 298 m
793 298 l
782.59998 323 l
741 323 l
h
751.40002 298 m
S
1 1 1 sc
0 i
1 0 0 -1 684 228.5 cm
-4.448 5.776001 m
(2)s
1 0.25 0.25 sc
CM
668.40002 200 m
710 200 l
699.59998 175 l
658 175 l
h
668.40002 200 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
751.40002 339 m
793 339 l
782.59998 364 l
741 364 l
h
751.40002 339 m
S
1 1 1 sc
0 i
1 0 0 -1 684 187.5 cm
-4.448 5.776001 m
(2)s
1 0.25 0.25 sc
CM
668.40002 127.5 m
710 127.5 l
699.59998 102.5 l
658 102.5 l
h
668.40002 127.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
751.40002 411.5 m
793 411.5 l
782.59998 436.5 l
741 436.5 l
h
751.40002 411.5 m
S
1 1 1 sc
0 i
1 0 0 -1 684 115 cm
-4.448 5.776001 m
(2)s
1 0.25 0.25 sc
CM
668.40002 85.5 m
710 85.5 l
699.59998 60.5 l
658 60.5 l
h
668.40002 85.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
751.40002 453.5 m
793 453.5 l
782.59998 478.5 l
741 478.5 l
h
751.40002 453.5 m
S
1 1 1 sc
0 i
1 0 0 -1 684 73 cm
-4.448 5.776001 m
(2)s
1 0.25 0.25 sc
CM
668.40002 44.5 m
710 44.5 l
699.59998 19.5 l
658 19.5 l
h
668.40002 44.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -83 539 cm
751.40002 494.5 m
793 494.5 l
782.59998 519.5 l
741 519.5 l
h
751.40002 494.5 m
S
1 1 1 sc
0 i
1 0 0 -1 684 32 cm
-4.448 5.776001 m
(2)s
ep
end
%%Trailer
%%EOF
