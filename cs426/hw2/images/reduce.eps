%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 784.000000 337.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 784 337
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 784 337
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: SourceCodePro-Regular
%!FontType1-1.0: SourceCodePro-Regular 1.0%%CreationDate: 5/3/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (1.0) readonly def/FullName (Source Code Pro) readonly def/FamilyName (Source Code Pro) readonly def/Weight (SnapShot) readonly def/isFixedPitch true def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /SourceCodePro-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /A putdup 34 /p putdup 35 /a putdup 36 /c putdup 37 /h putdup 38 /e putdup 39 /numbersign putdup 40 /S putdup 41 /r putdup 42 /k putdup 43 /period putdup 44 /f putdup 45 /o putdup 46 /n putreadonly def/FontBBox {-193 -454 793 1060} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF1D53D6B91083A704933106ECB17A4B7E5383F7F67A8F4B4DA84272FA8A33A4F60176B21C75079930CBF1ABF7B0CF853935C8F3C71C2026BF19BF21F77C26CAB95F0FBBDE043133DFCD2D60281EC729051F61F32BA78E3D9CB7BAC6CF6882116BF4A9A68F10F489C70CAEE2ED9674AD23469B2034AA58DF71508CD2757C5496D59449908B4CE432264D24600E1FF144BC272382DD3A8AA4813CC33A5D2049692C3DC9CB475E2162EE985D2F3A5D2F7EA930F8724777801F5B1203BAE26C30E82BA7A078D40EA47AFD036181B747667F5F57E643A16893F7F76462A503637E23798EAC578AFB3DD8AEED91996BDB6ED549BE1379287F9FA97DD9557679F7C0132287D48C0DF8ED8DC24526F87522397522F5150E8E961E641E858C6089D9E6BAA98579EDDC70A65C3AF61CD416B6CCE755CC44D43AA88690DDB8BA00D9D532C445BCBAE62575A8752EAAF7AEE785C21C249A2C1132A955F99576E27E44AC66CFEEFBABB9BCD30BD3D0670DC42FE446A22F79FEAA87DE71B2C402F43309BAC09D2F2C707F708DFD5C2EC4F97C47245838D60D40CF0C59730DD827D0A21A0CABBD90EEAFF4CDC6A925408A4FC49B524D185368B5B41BBD19E68FA931B53DB25EC9B58A98509667D150D2CE740E336CD1EA02074F86F598B1DC25CD6579219231A185942A9FFF0FB340B20F43B8EDFD2C82ED5D843D83C88E2FF57967E8C53C3260F71719842ECE0FE07EB34F44A11EC7912548BE93F98AD78D73DD5050FAAB93820239B1FF865CAED1B3CD0EEEF26078682DDF961336F31DC3CC6D9BDB99A8211D54451A81745D306F68CD6A917E3E27A7C9A37775DE3F3B6B05B735EAD27F9A6EBEB3665B53F0D53C647DFEDAE116C5121D21A8555CEA65EEAF5728A8248360A8D6B1B4880E5A05874892D9EDFBCCE3DF5369F5A11D5B97E9A4C824018D8E02722D05CFE74D3E56C3C8508AA0CAD7F361C807592BB8CCBACBA715C9CF86488920C54155F94DA5685EE61F92F039AF3673CC4FB64AA39F6AE674D7ECCD4851713DD8A4D241D3A33CA251F20CDB0C299F864F748296DFAAEB5BE5814F199F98B51DA4BAB0C03FBD0028B776C732F5CA4155B1B46E5834A11E1F5714B8F413B974C44E2AAF4991928D96119BF308E60DE3D3C8C76BD626D1DFB487A6788D506002053C66553F4FD3DE0B3953DE3A593917BA0D518E4AB050C311D69783B456E4B621436CA0E66038286796D15B722AE1908F863E898BA402CF1C43B9056F4ADA27EE5A60D017839543DFA9EC90F442281D965FFB0F1ABD9ABB090151AD440B8578C54A8329A6BA2B2BC3F3BE9B8AC9323CCA3411A062BB4CE44616C9241284D0540DB2578DC6ABDA7733C99DAE9BD8A56D9A4F56375EBA1BEE582D262B45CC6AEC5A99DB203E7D07D38D81D51F623F9DBEB79DF1C9301AD37AE8F28C2A1743E373B507C740903BF046CC7482E09EA21B117D27776AAA09EE776D5F4B2F8DA89DEEF4A0A114A2B488C64675178F62D8BA9508B061CBE46C6B5746EA2C2AAB4B465D2C9AEC5AFF97FB332CA1BFCB1EF5AFE0996327A12D07BE490D7C94D91EFA9E6648D13C5D056A8097E2A76C52CAC2C13BDE861E3D5CCD3C8760F0598316EFEB328FA4A78A906E0AC1B976F9793CD69ECE86B77EB99507F8A718B240BAADA76C492D2B83D060AE422C70848F005056326B724559C83CEC40354FDE81D8D8A1B274B048BA7B6B06AFC551047E005F051D8C867372D9E51DBEC9AC2A7F2777F8CCB5B7CE83FC378F874E00197B759CE1BB670A4BEB8F49BEA1CCCE2058660044DEFFF0D60D46AEFFD5168EC107C3F67286D0588576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88AA072958C75F616D976EC60CA1EDBE4DD390CC2C8A6D27F5BFEEBB9FF5D8D2FD3858D99EE2102FC3B6921512946A9B58359504095EC203AAB153D2E873160F038ED46EB7E3A7512D59605A698FCBD4772EB57C6CE65D92428B8AE0ECA159D78385B2808BD3FEB216EC9F9CCC606BDDC904FEC030B48526A8B73B6DE92DD9CD2B90503A8C24390C0ADE13EE9503DB6FB5CE3FE9376D3855DB2780A3E76B3B3C6A256835728DB5B679F2FB691E4031281A7948C2293D469FC0D3CA85C4DFC6B045911C298AB85CDD6AD8520D7AE972F30E08F57A71D5A5DEDBBAEA7D70681FD4BE50BBCE981ED10B15DD6523856A0B0FC5098360A0D1E6174C1046B0F4D40BC00D064CF276FEB97A90E87958CB4DB5FBDB53FE17473DDA8984ECE278CECFEAB0B4BC12BB9769B1A42CE0DCE62BF098DC9F1E6B208405298A95AB5F4CF7BB505B0CDB441D12B09857AC65B05E9F4B63656CAF8138044523F37507CC5436D414F64D7112AE8B62CB66D0B6E045F1CEBD479F378778EBFE49A6F507C3EF92BDEDFB752B7692C4D541EF87DB2F06F1B52CB811FAA7CA6B65EB971D6F68272A03735A75C1DA55D877E0ABEEF1AAF95B578ECF8D267E3511E742C3732BD86F5A4A0AAB17E11B7A187764FAE3BE29459DDC57A5119AC7E5AA43795107D537B2BBEE09170E4ECF55A01B81C7DB73821DF95FEC0EE50964512BE565473889F8B82346B16F4E7D90E2353A6D18FBDE5BAF0D5E59E7F791FF46510D6C3BFB0BBE11FEDF09A6C4341CE8DBFA7911E1783A9949FF621E12DC1463DDEEC9FEFC9630F0B9C54F6384FA5FDA91DAE6ACD99C815674E6D4202D2A57DB8AE4270F736963E95C034B45D9F0ECDF42BA96463E5D02DDB00188B535EA1029EC336606DCE1401895B9F0BA27B7F6F51269A58B5B4DEB12D80878BECBBD6BCFE26915C050AC3030E86400E8EA57402CE1E0EC148F8323B948882CC17EE9A9E0AE066D64FCB44F1F0CE23984693A04B9179227214DB143405DF947CF20B5A0F7F02D1D14CBDDBD4C2393F806774F836809202C2263590B86B8DC63ACB6813C78791C87038F7A50E2967ECEB178F0A3EE0EA6BFB64B62261FB18FB967B1F8C3F79B2FE662EC117E08C0F15EBB0A202CAFDC31D3D3A7F5293F830A190E644A97574872981C10C309DB457E237FED0FC4DA3005D0F4544BA7F117C4A0644F31E5611E17AE979B0CD9BFB0A540E511AEE736FA19D1434F5B5A9D94AAF8001A2FE6699C17C9DB918024E7665D38794355609E6BCECD3C986F7F8D846746F9D87D80CF6688E797E11DA4910287495F6433FC6D4DED0EE6964363BA26A072D4C06D7F0DAD7A7D7FB86B05D1443F37512DC01FA0662B383CBAFFBDC9FB45722A287BAF84ECCD564FBAFCAA95367DF391E5BEBC3AA1BBCFDF7C371B1BD5039B1C33E832C4B075F8C48FC2AFC787834FB8B95C86AB93CBC898425B6BFC06AAC064BA20145382AB5399F5BEF7C8304A8732E9D968936EC90CA3AE4D9BA903A39CBBA56E34A6E1E10ADC60A31BB388E0B49C1D0784F32D952297B1859C72C38FC9F8E9A2765043563D5CA9B980F848C69D23270ADF6389EC6915C3319F07D93DAB0A94195E778E4476847AFE8A01FD2B3163D0E3A110FDB35A1A8B4F5707E04F1F1D126D6CE7D73B3A860C7043A998B3F6297BBBC8CBAEFDAE889C800290CC9D9A4A1BD918D395A1F9FEA4C23F8F4A0282E8BA1D67A471FDC35BE3819ABB121C59AF8540D2C65A7718E960A19DBC558586DAA2B3406B2C3C6597CD0EC2810B8DEF3291AB4D899A4F691306BA22F00D888E49D65697098D5B9479DC2965CBA2AA99E04CB1DA72108B3DDF98332DEB0A4C544D0D22FBEED54D2C73F432CA73DED6130433F488855C47C5641DD5424809E30A65DAD0F983B4E499220D61BC1E3A6A865D85E47DE7330C22B14AFDAF68FF8683CCB7AB3160A8179ED137D8C7C97CBD55AEDA2240DEA40BC6707D37B48D110665CFBA910FD1749BA2FA3746CBB73D9F311AB0F9E1F1D2B437C01203D2939E89A1F18A4ADE840864F947AA62DFA95324ABC738E09112491C1B2B268C331439F2B72D5E0BE3EE475FB99C45F467A8554776F3FBD6A30BE83D5E4913E76C2F08390B40696F09A4292D42128AC47A8ABFB7055FC1AF6326C4BC69A50D3ECA3E9C20240D3A65D344488BC8B6E8086DCF1A04349E61F33C811BB8388FCEC80B9EDF289DC6EA307E8F27A5BD0332FBE14335B48193C9B34DB24CCE4C780C9CB16CE5FA2D1D7D4AFC918AE4456DEF573F4CEE8D6FFA0EB63CDD09018E5E9E3860CF43D42F866A765D93A53AA7ADF320788AE92FF46781BAB03D6416F5AF54CBA211D140C756C68742C45B4D3B1817E08673A85EABB084A46BE5B2CA3C9B0AEC5FF8A0FCA6BFA93D78567514D97BC88DDBAA400673F6466ECDB1F994EEAF3D3B9D508722FB7F60CD5A6D32F47BE52BFECDD83BF6C8E2CF5C3F2C354D192123101F005776D391A587EB91CD5521075B0535AA37CF76B44FC603870E7EBCAEAD90F25263DC02FACB18810CCA5C8DC70C57CC3067D9387E6572E77FDF0782D65F62BB5BC90A7B5C6DF360BA3FAE19C1C4F15AB472B92AFA433E9A3A7DB7D20AE9888D6BBF255E9E37A2DD633F5C8846EA315950609927DE21EAD2762868CC38D21C64F5232F5308912B305447F69DCDD09591EF97C9416682FD068AB43DD4265C6004306F57E8FD977F6CFDE8B59827396EB193E304FC9A7A5E032F586258509FD53D8FB8A7E48808E37CDAD43D250E1BCD381CE269DF09A009519B0269B18BDDB59D27B474337AE3AE3E0AF2A24F7D7BBA3A953E7E870225DB5CBA25FA42F8D1B001DAE5A1FBAD7F98FA3F4B853BE153D7CB50A88BC2AC8D4C0EB91423F8073BF631F828F830141D19EDEF60EC69D043CC35139CCD5EA1A42778973B08A5E7315C57B8B51438D79A0371A24554EBB99318851BF67A961AA77CBB1FBF65175A907F6607D2393B4AF7477E5A9477F778E0CB7FE409F2417CE78F99E0A2A860BA9D2F05CF5E9B120C4E99167D54BAD918179CF9006224635E8D1DE881864A3320D9AB4B5CB4FBBE2EA9935E309DFCE935D5F53CE8564D07C0FCB9769A14DD3A4F44FE8D0BC52464ED1751B549C6755ACC75B4B9A927C66F714D36B85BB9DBA804E3DDD1C1DE619DFD791DD4DC018043537ED6E61A96631AAEF77B9653B3120F255B9474D77FB1023E8ACF96920D043740AAD450A3A19512120164B6FF5C0A881423C01CD81D2F727668AF51E07775709D4102B252147F55A0E4A8AC90E63A07849EA14A3B0493DAF1F0F2C04C88B4FC501E2C69B84905383027756E05D1247C402ABC7545BC009BF02E9E50EDEE778259ED950254BD6CEFDC6CEBB0E6AFADC758C76FE9B448D12711856F2F6B48F6AC9DC1F8B3A3BFEA6517D813AEFB88F5A2C1BFA94167AF5114630BA27B369F916F1C54889BC7F7BA001388A321DDBDC4305F8A0122BEE36915D2433A3D8F2C1B5F972EDA8581F7FF2EBBFEA262D1EA87E4FA5F61F359C13FC8A663B5DD707AF279F6D4AC3994B5AA83B40B25A536CEEF98528524D66439BA387402696DDB05021929FE80E5825863A37BA42532A5C5D8980959BA2557255284C4C8CBD16BCF5B202EA17F6BC6A1E69DEC29EABAF3492D71E307F61D3941F8737A05112AA126B5073707CF197878DDAF49D0A64949F2FF177515488082E47EE020A9776B7B1804FCF408DCEB7F85B4209E1DF1B33248C8589956BD67E3453F3242AFA2E3531AAF4FA1968E4E5F5CA45AFF874CB9880C32F2AB275EDA64994EFC625E498A55E7626FE84FD26178C66536A9BC3E26B0533B5A7F93CEE3E9E076E3C357A9AEF47057177C07F4352D12223CE57ABC904591928114DA3D9025772E8C65A36555B8DAA66B0F2E512B638AEF38B403FE2D3559A887BC98F4F2B77D1D07500607469DE0068A2E3FB43EBAC56C66F9C990C552FF983AA58C14D10394FF5013C40B7C873E065BBD9A8EFD01CD1206B43C61DF3E0EF0FD99973C801182FB0FD29A7D823D92A4092A790F2BC242494843BB6D5780BA8E9AB9DDE57408503F0F99793E2A94C550EE0BCC61629A84B5762F380FED80E7BEA78F4DA3C480476F9FFADE241E8EAE369931B6A5049213F9B88C72D5C28251AD180AE8CC31D58957629DE8AF1C5CE3D204FFB795EDEA57EAA71EDF4E128B28BF8D36BE05C0D2A8B27B4BB21BDE02338B5C9570E76EA2AFDC8FE0E93D809A2C7841D7B3173AE6CC5C4E008A426F9D1C4FF39C6F2E8FABBABD604214137123EF6219FA8A31D212D97969B40C99E43A359BF32BADC3FBD7416BB5B04689E23473F16BEA46DC2398FA0E9C13CE5DEF3CA373E79FF140787C0BB7105D1EE6B9E17FBC46691815739B2E34F5CBAD994ACFC8E92DE356B0A44CAE51D26045D0108463139278F012ACC91558508AE0809353F95E01A646AD938C36478DA43B906BAD8A787A514ECD0031B36AA12D1CCEBA8426670F1EAD1CA6AADEEAE423D1DCF66DC4EFB865ED1E7CB841665C21C5F2E80F54591B97581217E2EE86AC96BF23188A519E56F579449D3BA4F0714A116BCF2CF6944DB7896F67E3CCDA7D701C6C0292581C0643895785A92C95809A996FEEFABA1B7AD8515A20F582043A65018CA26B633E4201850F78C65EF901253C4AEF3067E9168258F3655806657BB1471036171FA1FE7E316FF0F075BBFB85CD5541DB70A499567FDB29EA3140D8535D679EE58D769E398365066AFE17A49273D0CFBB27039FFF4AC136C5FC8C0F717CDCE4DDB105121244A26C450DCF69F42D06C6445213BFB016251C85EC328BFDB2AD19729C4669D9C97378A1185A191BC66DEDB187ACB590E6B5D673E24E5B1EFBF79BDC09ED7076F3CF45FFD3B454CE92A599165320AB0C0C2C633885297E6CD66FB4A7925895E03B35E7CB1DF0418D10B3D65ADD945D3145866A5833A5D6DA29E7B0526BBDA5DE452A0933523A3BE59AD756E41D548D9C84F7ECEB44A7ABCA4A90FF1AB84B8CE74DA96C4BCC13F313FD35431F899B59CC62CFCD9281573E9417A411B55D6D5B53BF936F1CECCD18726C24AF33FA71DA8CCCAF480DCDE895F863CFBAA4CB9D0808879A3904296BC0CCB1B5C82C2F9AA9347C56345DCABC192096B5F2D3358C193FDB4225905B77CC0C8C21A0DB64B68D0BDD1DED2FB0606D7DD6287B0E05A041B5442F59A6089314956B50AFAFD74FA2D1E78184D93305360E155025E3FE622745D76BE5534267622511681B481C909334DF3045E2C3AB6BA57817291513D78DB1C970B27B955EC5AB465AF5CB5EBD3BCFF8E335947F0D41616087660D1494E1C06A84765CDE32945942FD4B441FA257E06F56F0F1AA20ECDF4F570EDAD4421EE6709C225E2EDEB7C7742C27C0222446D822DCC97B0B3128F326A2E91AE994C8578A41502C358E01A44B7EFC4F9E11CD85F3210021C67D3C3FEEF12CE54E0AAFE3AF93D29C4A8229BB7E539D2F953B0B9DB33D622C1875405E1295178F588F812C6061C49D39712E8D23D402E55D227CFEB8890CBF21739001F10E724A7A85303ECC7F8932922EDC2D7F7E1D23A2723AD4D0749DC05FFE32A88F528FD2F5F63566E2019CE536412F750E7496057F77832FB1EA229F5AED3334D033C7EF989C1358CF16DC076DBB5214643B76F3B5E4D8D755DD0F6256486E345D4420AB1E1487558D2AC727ADB516E37F5E7B71D89B7F06149897A55EE182D6B5CEA80224BB6DF8A839E88CCD0003F30419E441E5B16743BD14CFC8BF4336DCE5CF17DFD9067916D6684376E40F6654B45CF1F6AED8D743E9F1F08F9943033DAF0EA2688C93F791C3F0C44844218CD49F70AD830556A980ED4E756070E8E8597874C96E819B5F966D91805C42C589A12992AB917C97D4E964CDDA732C3AAE7C90F7F1FF22437B8F798955067C49615C702DC2CC1D18539ADE8B693544AC18DCF7A225327AD8A4FE285AFD6933B13E26C39EBC3FBA65D33EE1C61AA28B742E73F2DB2DEF568D611318433D93614FDBCFB779BCA95D708D5D00FB7C072427CB371BB076198AD54253400A988BA8903DBE5199BA69DBE2D544F57B8140BEC17E6D7EF28EC1B8A10F1EB58D4E1E7311CA9357686CCECE8C613318B6B28DF8574F5EF8CB3E51FC4409428C648A866D26B9A083A5A69EEB8584D6AC888FD7B4C5F1D7C966D909561AB6473E7C2541CBEB3E1E978372A39F5BE217A81DA43CC7FB22FC6F307761CB99C9B6083329E2CDA61D7589EAC21D1AC0B40DA40C5C331273578ED414D6FA40AEC9E8A3D579CEC77309C031C3F300E5D1304242E9A5E28527EB3993AB9881483E5D0D68BF546FE0A22C02449FF21030376149FC936EDBDE01B76C343B51132BDCB35A79D96E06CD43A26783CEE20D723DACA87382351C71B990E6B8E0C9E2BC216AAEDA44D8B6BFAF68E33FB35A963B2866935E88E649D383AE298C76F0A027F5B52C3484F2EE87D96F856CAEC086A9137C113F356746B69C2CF55F953E4DDCAFAAEF6F9196A01A27A32409E4226BE0D3468A88F04F06AFD99D534368109CEF7F7AE468A0A8DD274B1610646B898745EFBC132A0DBA82A6C28ACCFB5C235C692884E4341CEFF5C06F50D9A96BFCA4BEDD4D02D822078BAE123DB82A9FD3876100E4565A2ECB32E8CB1F35208BBD20A290B9387600E50311A513D0BCCE27307ABD0F34EFEDD7515C53CD6721D57173D43118ED30D3D9080748CC25512F80E84BC526949E9B3448DA5CE953BB307BDF5CEDA51A3B50AA8CCF8D9CCA1BDCD335EDB25D4F1A39F214B13275ECE883A0C753EFB0D951148EF360BC08BB42D2816199870E6ECF1127EF03E5D988417A0D43EFFF125EA8CC1BE3A1931871AD11BE4ED862658A8C12BCBC9AE542BC5ECDF642A5C019D1BAA856CB8687704CEAE633C697419E932295158028DE65B9AFB36E24F53D403B2ABF8E86FE26F9CF0A0B7747863A7874958EEBF8AF4F9CEB601D16E141CEAF6D64C679A3736F8F26A94048B8514D9A50E400FAD7E0A21039A3E6A6BD561733483B68F45B1F7D48771D3043D3936E2F76F82F253EA9932C37791BF06A1312B39DFBFBD9CC2214D26717592889761205AFBAEBDD81472B022AF98ED42D03DDC455E92E4942040CB3B406F972F69ADD7EFA2C5646E949B41C57B1B68FE34CD47E1B712883CD2C15E43BF7E498E3E5B677E3DC571B046E8FFEDBD7AFB66B0EFBA367A42C688926DE1A63C902B6F84ED32A4361F325197FBED4A7315A5FA2864B8D9F474A9A83DCE81A601A73C59C8F355D4A1AE3705219AEAA95EA9F4FD0FA5FC7CAB9C706834F8F54309472BDCB4B92675088790D5A154938717421908F2A29DD30C5054291F082F3D5BA129FB985ED2F23F9147BBFCB545B6A2E333466EAF41CD633A2D6C1205716A46CAE28BA5CD3BD2AE463B96BA3F606FFCBE1666536084EBD23DE8D97CF820131388381F7131C65BFDFE7DCB327DA9482006152A8E361E1A31CEA267439C662760414C0140C052BCFB66E59C433FE8D10FEE163CC20074A01AE18033A2714477C57DC96FE98FD5F51CF001FD1DB399EDB3B639D540888DE3F0B82B013BA26752AA9554C6186D37D265D227D230FB9700A3733F5AC623CA6729548F1C35131137AB222A517CE3615FC7D5F57D6AE38D3DBCA1ECC8FFF2D5226A172FCCC926F2839A5C7956F6E230575A7B5F533DD961D64D2873ECC1F0DBCE57AD3908E61AFE79F6498B0A85EFBB51C0AC49FA4A27C637A3887D0DAED54E2931EDFDCAC2756E95C19E2498CEDFB4335F0D00934DA7183224CF9B55F1830107C594196B9E31A31A8484F90CB17AC87C26A96BEF29FF85920FBD4191CB449AEB477B70473523B1A23F2E3A71781DEDDA468CD33D144DE465DD11AAA6C3FF7634DFFBDBAFB5DCAEDF336E3F988A9594167214DE9722425014DCC2A269C390431322A42319ACF2F9F1EA983A210C07A2F62C29CE0DE38FBE923BF5BBF0AE98FC8C1A9ABBAFB6755C3B3340C0D1C21C31FEA0556EC74367F91FB95919055D5F321582C19BA3D40F781E9F5634C36154DB565373E434A33DC801BB379BDFD1FDC40EE72ACC59D867322768D573DD31877C59CBC934574B156E9EDA1455DFF706C356A7D68E9D3FEE810854BDC47FDF5D116760B9DBB327C42C405C729B9210E0210E6141A31881924CD7FF6BB18C9D7C604BD9F3FF6E33DF8A573490DF8E76186ABF14A12B8ABAE731A0E06F3F2F372266AA9EBE1ACD6634D80507800564A5310631E1759576CB34CAA4A46D8FD0861D1AD0EC4CEFB2E801D2B8891C08DE11FC9A6918EA2867D2B79F3EF607A0B762B350BFB169976ED8C28D3B72CE7EE5EA9D36457936DF9228C2537BF5DB390FAA07C4CF578261A98E631498FF0E87CA1266ED4D11953DC4A0B7102258DA23D3E515D056B40241C22EFCD9E58C8CACC5C8EF45425C161C35BB3E588852B11E65661EFC5DF29B253234A60789EE6B6A4867CB312987A0AD05867C9D9504F0444C0126038BFDCE4A3866CFA92F5700850493712EB7A807172475F1DFB8377D15B9345F585618032B27C2912A6AB225512EFF0EED23B4FEE58315A44E924EA2DD7823038AF96894AF431A750E85D8B8F0082DCFBC943890FB63C4D6ABA32CAB3041CF20D14E35AEE565919D8EF6B72ED95EB0295AE67C6F5CF260967971406BBA64EC30841EC36DAE8D9BC2C0FFFBF79E7087E147B2C8755512C2316CC5D22EC26F9B2761461B3F959C5C298357CCBD5CAD899AB14AE3335D64214459F8228FA835F652E6D67A78D42073887BBD821C55FC68ACB790EE60A219CF79A1F2AC888467322EB65A2F8B4626FBE2F3B0DF5AB572532D0A728FFEA7CACC9630B6A44BF0E8EDE2E9427B47394F9F63B35D7F6E62F76F43EF7DEEF6861F234FAE0882C9F080D57E5D775FE7011D54135A42662983F9BDF5DC443FF034971BA0FEE03E8F7046F040BFE459CB6BC8879939F944D67488D18118E4B0D3F2AEFA44E9BCEFA94F7C7A78429EF8524055FBBBDC95998DEF2E28070C880103008822FE6B4451B6E91DE2FB89091FF99D1725446719670E61E21E45D9BDBD90498FC57905749B3828D64C56410D713FB66ACBF9197128D8BDDBB81AB095F1B4965D5179987643C782C301A2FEB93EB069C8D743673903F4D9A56C1C94413E1DBD54B0F2CEF97DCF86D9F7EF6D925EF00FC9DA56FDD8318E0D3B03084E6406F3ED065EF3BC486F3BF12C3F613044BFC1F9A998F418C0A34939867012A59326C1F7E57E1B242A7700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/SourceCodePro-Regular cguidfix
/F1.1/SourceCodePro-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /period put
dup 34 /one put
dup 35 /K put
dup 36 /e put
dup 37 /y put
dup 38 /hyphen put
dup 39 /V put
dup 40 /a put
dup 41 /l put
dup 42 /u put
dup 43 /space put
dup 44 /p put
dup 45 /i put
dup 46 /r put
dup 47 /s put
dup 48 /g put
dup 49 /o put
dup 50 /d put
dup 51 /c put
dup 52 /three put
dup 53 /four put
dup 54 /two put
dup 55 /O put
dup 56 /t put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


35000D5DB8001B10B80040DC00BA000D001600032BB8000D10BA0027003200032BB8002710BA003A000300032BB8003A10B8000310B80001D0B800012FBA001F0003003A111239B8003A10B8003DD0303113153633321E0215140E022322262723061E0233323E0235342627353E0135342E0223220E020733343E0233321615140E022B01222322DA181B20372818192A381F494C025501213E5836325942273F412A38213A4F2E3551361D02551021332236481625311B12050504019548031123332120332313574537563B1E1B365135405E0E02134A3031482E17223C54331F382A1939391C2C1D0F000002001C0000020302C50003000E0051BA0004000000032BB8000410B8000010B80009D0B8000410B8000BD0B8000410B80010DC00B800052FB8000A2FBA0001000800032BB8000110BA0003000A0005111239B80004D0B8000810B8000CD030312523133313112301152115333533350153EEEC025044FEBD01375060F1015BFEA501D4FE3352A6A64B00000001004E0000029E02CA000B002DBA000B000000032BB8000B10B80002D000B800012FB800052FB800002FB800082FBA000A0001000011123930311311333537013309012301114E5F77010278FEC7012D7BFE9602CAFD36FA6FFE9701AA0120FE9C016400020026FFF002D202DB0013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E02851C3C5E41415E3C1C1C3C5E41415E3C1C5F2B5680555580562B2B5680555580562B0165366954333354693636695433335469364987683D3D6887494987683E3E68870000000100000000026502CA0007001900B800012FB800052FB800002FBA000400000001111239303121132303230323130167FE63CE02CC66FB02CAFD95026BFD3600020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB900250008




00>] def
/CharStrings 26 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/period 3 def
/one 4 def
/two 5 def
/three 6 def
/four 7 def
/K 8 def
/O 9 def
/V 10 def
/a 11 def
/c 12 def
/d 13 def
/e 14 def
/g 15 def
/i 16 def
/l 17 def
/o 18 def
/p 19 def
/r 20 def
/s 21 def
/t 22 def
/u 23 def
/y 24 def
/uni2B91 25 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9264C9384F249EBFD8DD5BFBB9BE844B0E83BCFE532E688793A86D21BB50B73F1E4CB55B3332FA078523601D7D59E771AAD72B0C3150466C78199AB7245DDDDDB744BE485E1956EC9C8F9F94015171004093B221EFCEA2ED2C5237FD6408A1F600E98635D7DADBC919FE934A0308C9DB49FC8A2E6388E218A031CF70011B474C6881708041BA286C6873591793D7FB2A31F1EA52968ACA65AB96012837A25017E921F531A772CF06AA0E0EFBEB18B2A5D5E606D22C80063AD57219174131C68EFE53F447D42606C82E3C10A1EF936116BE4A7B2F974EB3B5CE2054291E7B72FBC901C432C83BFC495B73BE352989CC2CC1D903FE531E494AB73D53E519E790E6EFB9C4F94F1BADE040900C2AAF46DA140F0E56804C1BF84765FBD46C010FD35890750FC42A4D043E87ECA682EC285F1FFF6644AA67A142474C93E0067093A04D615442779330498C9B27E0B470325081938FC9C6B1FF229373A2BD4FB789576CA97137E2D8432255D448C0CC96CAF2F010DE298584F8A09BC9F9152537F3A230E81C88398D2EB1A93595971099BBED201C707D3DFA395FF245FA356C21E86208F3C1FE0171F0898C2D45F6C9B45C20BFAB8E3F8F758D16F635E0F47B9893CB1D761595350BEA1C59C9BD3ECB526BC8BC67FE3E5508F6E4698BE1A8D6063F6216BEEB02431ABD312EAC414D8C454D07B128A76F9A34EF5881BFD99095FF723940AEFE631D4FF42FAEBB5A81E898182F43C7CD8D6323AA1458F330FAD5051F33490D

06A1F1C2A8DD2B6C0939B706F28DDEB35776758FB5584E8026ACBCE3E6751D9540A106EFD1EEA17C6D776AD58A5F36C4A1761695F9858E6BD4F10D99052B82ADEEA143DCC90C0610A08AAA4272F5EF49FACE1231FBB31FAF0203DF280DDEC9F08BEE202ED11A983466166A644FB705479AB39DF581B6D3D01616636710D985A1E3806022F51C8B5AA164700BAE543B00503162341D6102A53F1C783D38C17592CBAA646CE25718CD882347577C57FD95CDA7DFB123556E6143EA7F07982D733D51D2B9042B925A153326FF3EFF5622416E27A3653A1F1C25FC5F00FBE4555E699E038583B8DBD720E483BEB12979769A4A6E8A464D4053C537186ADE8C13CAA839C1FBCC481290319E76CFA4D38B66B198E030E9186C25DF234F496EA2606504BA6FBA24539AF62CD62AB5D7665D4652F80E84B0AB01AFE140DF877DB408FCEEBE4FE3FA8E2D7CE1EF8DFC6E0F676886B279D9B166BC4D59841AEF54AFA1A94237A6EF50222B3D9B337DCFA80DA065ED6064CDA0CEFC257CEB9996A0357C9A46A8DA1BA905A64863396D1347590E333BE6580799BEFE23C154B39B84E5A531F148BD0CFABE161F2CC8236980F1E8EC2B268DC79B11069B9DB605255E98E476F0960718B39B3A14DD66C7D2D1BE0B584352CDBA66CC9656F358662EB2625B00C0873564D7DA8E6CC0BBE2C6A18BB48F0C10864A7108C33AE08C4F3A69972C4BEBEBAA68BB37A4A2F4CD8EE93259B736BBEF5371A91F50233C1A04E4A3B039234665A9AB4FC9720A5761D446D066D5B351F7EDCA73BEF7E4328DC5A6B92FFFA8118A5C80180529B9B08C6EB525E6DDCA70658C1F3D32A58D54DCDBDD5BE0526A16624B47BBADE721B91E1B97F0D53675E1E88FB52E6DFFAF34C107CA8CBA3E10B761B481374319422105EAB0F143AA85E70AD3837151800F765C90866AD18DAF8327DE3058433E975A7B5DA5C04BBC1E20FE7B405BB642A7D6268D730E3FF2194741A0DC8397BED8ED3135DA80319FC2B49502CD9F05A91349591A17D9A20F687891C31F38DE3C1B4DEAA61E3DE46AF4CE9CA15C1CB137BEBEEFDC7971E9FFFD22678080E3D984028DC2F28428BE08B0FB9B7E86FC16F5FB1240D5E444C09159A3F39B68917210D72596852EE5E7C2DA814A3F87827DEA647399FBC320D2A2D4F6E2852692516116097F8A37706F405F0CC9FA4F2545903714BB840107ED130F83535BE84095D71DCF85B4BDE3F05D57A2A3304C45285B921D8D3B8265BCD588E6D4CED959156FBCD27C5BFA91DAB25FBFEBC55EBDCE39D46FDCC83C972751393D019C316318C382383DBB116A566019E2E9BCE4BE54CCB241F998EC2F57C1CD596AEA8B5909FA7068EEA28C48D472645B9876CA4A2EF21ABEEDAB1C020D9D48C030C1141EEF8922D490AE6AD02109CA84DBF617DC09FF1FF772B5212912B550D1
A559A79F8219663B9E819B3A7B59D55493100F056099AB1E36A7DDB4E58CB46533182BF240536E551B66D76821E27D13DBA634A98D9250854BAC57B5DA7794926E4D4B096736B4EFB0C189CBED4B2394B55906BB951BC7C3CA6984D52D1181C490ED561B758AC2D6057D61F2C6A0F06695B93224B1B9C9B1365C5920F0798D5A4927B32EA19A11BB1FFFD8DEEE6D6C23BC1B6864471466678B70DD2CCF4A076C5FC6D1DD265A891E65A4FAEF398E458AF51C4A4D73468FB8A88BFCBEA4C3A4C58D676727A95935B14BE7EE3A789DBD9D1E1C3BCC86DD2D90F57DEB03B31A4B96A995AE22AAD9E58CCED65D3104E996108E7E4D642275E0009785DC8A4B904368533F90E2E57CDFF8A484E0F6C958947630C5BE4A1341DB6C2CC8586C9BDBCABBABBE498D96DAA63FBB261748AFC79F46EDFEB874829CD9C1F1433FD5D0F98BAE69FEC2066AEA572C5AED4F7F6B3D68D022CEB3C7D7E96C22EC7ACD5ADDB2997FBEBC5969559D1926A26C3577A35CF7740E54BAB094BB538D620619EC958567F053B479FC10984E6AE674255AC568331A3543F089B3D334AF1CB70FEE64D2A13CC20C658587D0D6DC106301E9D48CF6D8776F44125D4AE44FBBFAC027FC7146D9493C6EF9756A78610EEC5D27B9445A36222FF019913BA8B538CA438DBC30250BA18B289CEFC29A7F475F7F590E7B0567AD40A82EE2B8A1E8209E9EC7F37269D3790E97DF05A902BB576D8BAEBC9B8801EFA49219527E9AD003A5AC4DDD9D3983D696458E65A7E96A726BEB36928DB497EE5544E954FB65F02F3ABDA51D9217A5AA6EC2E53A02F794BC5BBCDF58DCCEBDF5CD0D49062ACB793303B2F0FE4153B4831588580A3042B857B7E4A15DDF0B0847F8C22484D778A4C64F2DEEC465610ECA19F4213281A0706F1E23FF36D0B940E4B8B1D5ADCDC8FB4C161DB7407F3386965EE2DB94F05B86A63D891DCF85B9C13F0DF614EA46EAC54253CE399DE60735B324F69352208D997101FC7A7AEF8A54A156A4B0DECBE318677D333085DE4D530083867CEEDC4B8B7FA02F7C367A9463AF38136CC2460EB5D05E6A33FCBABD1452882D658C0AF242C415E7562B1C019FDC08169C185E2173F83DB91B9B8C0116E23CC415A892CB1280F4483CD4ED839CE7CD7F90EF77DDC344FBC6D5F9A8D3AFD9FA2347DA521FB1F1D4695F4DFED152E6BA03F3EF975E53FA0B7DAD3D2BBDAEE3888DEFE809AB7507B5C23CB589BAFF4D4B6B1EF21D1C3B2779F3DD835095CAEF6BC6556CDE01FC39A9CA420B9DDFEFA1289C9AF73343E0927027922E085622BE26DB574AA8A0382CC530FE945FD5903B71CB9895329B58E27A023E52F8AF9A35FBC52692B44AB41413CF6D5F42006ECDE92D2E7B65E36E64F649348808CC8EED4D8814526204B4A8D446A0E305D56615020F6E1EE308E24B17A994FDBA83D4
256ACF85E741CFE3E004C3DDC548A3F6683A197A51D41AA9ABFDE90941A259B73E8A4A593E0E74ECA7B6D4EBBBEEC6E64F29FC80700EB0DC2A8B02D3412839BA37F847D0754E6EC5643857EE04D78A5D6444B3A3D771B780807F6297EB36948410848E560F4C87A8DBFDE1A819E4C15C511FC7221F78344A068CF4F31F1493222270C0A20236A2A694CF40E2400C096E441E294853B47FBB4D529B82894235D7B3ECAC7198232C5600CBFAAAD0B3248113122322340EC0A0666F0FDB2B8A0C99FF8CED85D09B502B5420B1AA67C870408065C0F85FDC81F1819E2CE946EBE96E9EF447E491662ADDD6FFA986B6E3A663D749FB3A146086A416D532CBB89E51E0D20A436B0178120A61C9AAB495DDE3F5167837A3159F573194A3A49ED9D8D266D64CCC85AAD3964527A754159A9E1C882356E73AE349477F8C5C9A35DF6BAD40ED4F7B4E0EB73238C22B3FF357FF49BE1451949226F65B953772E8D5FB255FDEC1BCE03CEE0442B458FADA71790E4F1F7180960ACD97D349AD5F911001F06ED1D5C4D0A47F13096054BFD36D12EB0EEACF39A2E89FF6942C9B51DED5D569582C9511A6C097032B90460F7EBC31196152626473828D8BBA1C43A6834DE4AA1B1FE017B709AD49A6701723F0BED4DDF98D7FB82D156683A7CFB3C20B59F73E6320A883DCEEB3473B7AEABC6E97FCF4FED3C28A48A65D6A7E59FA36F2433F01EC42A70DFD751CB62FB8D451F62B33723E15FD44186B4B89C210A584112C335409DFB5E56867083B7500F4482962DB0AD429AFCDE3FA13FFE7C517433C6D0B2539046B59692D77FB444FF8FFEA0DB0A9BDCC66F554C3E7B493AA8FBADD661130DF417CB7E0B8B63CE2ADEF01896885F904E49040B607A16794C3CC73A21166170937ABD6168B42DBB358B0333AC5A8AB56C8797F91A0E45B6BDB30A728C19FEDB4D9D5F1243E84F449226F79A6404DE6BD198191F1D5319A7F3187706CDCE64D8438E286E76347A6FD8D3B1C26A718EEC323472CD5811DE52DDBE91464A6D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 784 337 rc
0 337 m
784 337 l
784 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-2018 1464 m
2157 1464 l
2157 -1311 l
-2018 -1311 l
h
-2018 1464 m
f
1 0 0 sc
57 246 m
99 228.5 l
57 211 l
15 228.5 l
h
57 246 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
688 293 m
730 310.5 l
688 328 l
646 310.5 l
h
688 293 m
S
1 1 1 sc
0 i
1 0 0 -1 57 228.5 cm
/F1.1[ 13 0 0 -13 0 0]sf
-22.559999 4.1500001 m
(!"#$%&)[ 7.800000 7.800000 7.800000 7.800000 7.800000 0.000000 ] xS
0 0 1 sc
CM
57 287 m
99 269.5 l
57 252 l
15 269.5 l
h
57 287 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
688 252 m
730 269.5 l
688 287 l
646 269.5 l
h
688 252 m
S
1 1 1 sc
0 i
1 0 0 -1 57 269.5 cm
-3.0599999 4.1500001 m
(')s
1 0 1 sc
CM
57 205 m
99 187.5 l
57 170 l
15 187.5 l
h
57 205 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
688 334 m
730 351.5 l
688 369 l
646 351.5 l
h
688 334 m
S
1 1 1 sc
0 i
1 0 0 -1 57 187.5 cm
-18.66 4.1500001 m
(\("#\)*)[ 7.800000 7.800000 7.800000 7.800000 0.000000 ] xS
0 1 1 sc
CM
57 91 m
99 73.5 l
57 56 l
15 73.5 l
h
57 91 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
688 448 m
730 465.5 l
688 483 l
646 465.5 l
h
688 448 m
S
0 i
1 0 0 -1 57 73.5 cm
-6.96 4.1500001 m
(++)[ 7.800000 0.000000 ] xS
0 1 0 sc
CM
57 132 m
99 114.5 l
57 97 l
15 114.5 l
h
57 132 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
688 407 m
730 424.5 l
688 442 l
646 424.5 l
h
688 407 m
S
0 i
1 0 0 -1 57 114.5 cm
-10.86 4.1500001 m
(,-\))[ 7.800000 7.800000 0.000000 ] xS
1 1 0 sc
CM
57 50 m
99 32.5 l
57 15 l
15 32.5 l
h
57 50 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
688 489 m
730 506.5 l
688 524 l
646 506.5 l
h
688 489 m
S
0 i
1 0 0 -1 57 32.5 cm
-6.96 4.1500001 m
(-.)[ 7.800000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 57 148 cm
/F2.1[ 7 0 0 -7 0 0]sf
-0.97299999 -5.2939987 m
(!)s
-0.97299999 2.9020004 m
(!)s
-0.97299999 11.098 m
(!)s
/Cs2 SC
1 0.25 0.25 sc
CM
120.4 283 m
162 283 l
151.60001 258 l
110 258 l
h
120.4 283 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
751.40002 256 m
793 256 l
782.59998 281 l
741 281 l
h
751.40002 256 m
S
1 1 1 sc
0 i
1 0 0 -1 136 270.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-4.448 5.776001 m
(")s
/Cs1 SC
0 sc
1 0 0 -1 94.5 308 cm
-55.712002 5.776001 m
(#$%&'\(\)*$+,\(-./)[ 10.672000 8.592000 8.000000 6.224000 8.896000 8.592000 3.552000 8.896000 8.592000 4.448000 9.488000 8.592000 3.552000 5.328000 0.000000 ] xS
/Cs2 SC
1 0.25 0.25 sc
CM
120.4 241 m
162 241 l
151.60001 216 l
110 216 l
h
120.4 241 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
751.40002 298 m
793 298 l
782.59998 323 l
741 323 l
h
751.40002 298 m
S
1 1 1 sc
0 i
1 0 0 -1 136 228.5 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
120.4 200 m
162 200 l
151.60001 175 l
110 175 l
h
120.4 200 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
751.40002 339 m
793 339 l
782.59998 364 l
741 364 l
h
751.40002 339 m
S
1 1 1 sc
0 i
1 0 0 -1 136 187.5 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
120.4 127.5 m
162 127.5 l
151.60001 102.5 l
110 102.5 l
h
120.4 127.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
751.40002 411.5 m
793 411.5 l
782.59998 436.5 l
741 436.5 l
h
751.40002 411.5 m
S
1 1 1 sc
0 i
1 0 0 -1 136 115 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
120.4 85.5 m
162 85.5 l
151.60001 60.5 l
110 60.5 l
h
120.4 85.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
751.40002 453.5 m
793 453.5 l
782.59998 478.5 l
741 478.5 l
h
751.40002 453.5 m
S
1 1 1 sc
0 i
1 0 0 -1 136 73 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
120.4 44.5 m
162 44.5 l
151.60001 19.5 l
110 19.5 l
h
120.4 44.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
751.40002 494.5 m
793 494.5 l
782.59998 519.5 l
741 519.5 l
h
751.40002 494.5 m
S
1 1 1 sc
0 i
1 0 0 -1 136 32 cm
-4.448 5.776001 m
(")s
1 1 0 sc
CM
185.53125 138.25 m
185.53125 153.75 l
246.53125 153.75 l
246.53125 161.5 l
257.53125 146 l
246.53125 130.5 l
246.53125 138.25 l
h
185.53125 138.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
816.53125 400.75 m
816.53125 385.25 l
877.53125 385.25 l
877.53125 377.5 l
888.53125 393 l
877.53125 408.5 l
877.53125 400.75 l
h
816.53125 400.75 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 217.53125 184 cm
-20.896 5.776001 m
(0.1*,)[ 9.184000 5.040000 9.184000 8.896000 0.000000 ] xS
/Cs2 SC
1 0 0 sc
CM
315.0625 241 m
357.0625 223.5 l
315.0625 206 l
273.0625 223.5 l
h
315.0625 241 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
946.0625 298 m
988.0625 315.5 l
946.0625 333 l
904.0625 315.5 l
h
946.0625 298 m
S
1 1 1 sc
0 i
1 0 0 -1 315.0625 223.5 cm
/F1.1[ 13 0 0 -13 0 0]sf
-22.559999 4.1500001 m
(!"#$%&)[ 7.800000 7.800000 7.800000 7.800000 7.800000 0.000000 ] xS
1 0 1 sc
CM
315.0625 200 m
357.0625 182.5 l
315.0625 165 l
273.0625 182.5 l
h
315.0625 200 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
946.0625 339 m
988.0625 356.5 l
946.0625 374 l
904.0625 356.5 l
h
946.0625 339 m
S
1 1 1 sc
0 i
1 0 0 -1 315.0625 182.5 cm
-18.66 4.1500001 m
(\("#\)*)[ 7.800000 7.800000 7.800000 7.800000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 384.5 308 cm
/F2.1[ 16 0 0 -16 0 0]sf
-63.127998 5.776001 m
(#$%&'\(\)*$+0.1*,/)[ 10.672000 8.592000 8.000000 6.224000 8.896000 8.592000 3.552000 8.896000 8.592000 4.448000 9.184000 5.040000 9.184000 8.896000 9.488000 0.000000 ] xS
/Cs2 SC
1 0.25 0.25 sc
CM
378.46249 236 m
420.0625 236 l
409.66251 211 l
368.0625 211 l
h
378.46249 236 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1009.4625 303 m
1051.0625 303 l
1040.6625 328 l
999.0625 328 l
h
1009.4625 303 m
S
1 1 1 sc
0 i
1 0 0 -1 394.0625 223.5 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
378.46249 195 m
420.0625 195 l
409.66251 170 l
368.0625 170 l
h
378.46249 195 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1009.4625 344 m
1051.0625 344 l
1040.6625 369 l
999.0625 369 l
h
1009.4625 344 m
S
1 1 1 sc
0 i
1 0 0 -1 394.0625 182.5 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
420.39999 236 m
462 236 l
451.60001 211 l
410 211 l
h
420.39999 236 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1051.4 303 m
1093 303 l
1082.6 328 l
1041 328 l
h
1051.4 303 m
S
1 1 1 sc
0 i
1 0 0 -1 436 223.5 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
462.39999 236 m
504 236 l
493.60001 211 l
452 211 l
h
462.39999 236 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1093.4 303 m
1135 303 l
1124.6 328 l
1083 328 l
h
1093.4 303 m
S
1 1 1 sc
0 i
1 0 0 -1 478 223.5 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
420.43124 195 m
462.03125 195 l
451.63126 170 l
410.03125 170 l
h
420.43124 195 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1051.4313 344 m
1093.0312 344 l
1082.6312 369 l
1041.0312 369 l
h
1051.4313 344 m
S
1 1 1 sc
0 i
1 0 0 -1 436.03125 182.5 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
462.36874 195 m
503.96875 195 l
493.56876 170 l
451.96875 170 l
h
462.36874 195 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1093.3688 344 m
1134.9688 344 l
1124.5687 369 l
1082.9688 369 l
h
1093.3688 344 m
S
1 1 1 sc
0 i
1 0 0 -1 477.96875 182.5 cm
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
504.36874 195 m
545.96875 195 l
535.56873 170 l
493.96875 170 l
h
504.36874 195 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1135.3688 344 m
1176.9688 344 l
1166.5687 369 l
1124.9688 369 l
h
1135.3688 344 m
S
1 1 1 sc
0 i
1 0 0 -1 519.96875 182.5 cm
-4.448 5.776001 m
(")s
0 1 0 sc
CM
315.0625 108 m
357.0625 90.5 l
315.0625 73 l
273.0625 90.5 l
h
315.0625 108 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
946.0625 431 m
988.0625 448.5 l
946.0625 466 l
904.0625 448.5 l
h
946.0625 431 m
S
0 i
1 0 0 -1 315.0625 90.5 cm
/F1.1[ 13 0 0 -13 0 0]sf
-10.86 4.1500001 m
(,-\))[ 7.800000 7.800000 0.000000 ] xS
1 0.25 0.25 sc
CM
378.46249 103.5 m
420.0625 103.5 l
409.66251 78.5 l
368.0625 78.5 l
h
378.46249 103.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1009.4625 435.5 m
1051.0625 435.5 l
1040.6625 460.5 l
999.0625 460.5 l
h
1009.4625 435.5 m
S
1 1 1 sc
0 i
1 0 0 -1 394.0625 91 cm
/F2.1[ 16 0 0 -16 0 0]sf
-4.448 5.776001 m
(")s
1 0.25 0.25 sc
CM
420.36874 103.5 m
461.96875 103.5 l
451.56876 78.5 l
409.96875 78.5 l
h
420.36874 103.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1051.3688 435.5 m
1092.9688 435.5 l
1082.5687 460.5 l
1040.9688 460.5 l
h
1051.3688 435.5 m
S
1 1 1 sc
0 i
1 0 0 -1 435.96875 91 cm
-4.448 5.776001 m
(")s
/Cs1 SC
0 sc
1 0 0 -1 360.53125 146 cm
/F2.1[ 10 0 0 -10 0 0]sf
-1.39 -8.4199982 m
(!)s
-1.39 3.8600006 m
(!)s
-1.39 16.139999 m
(!)s
/Cs2 SC
0.75 0.75 1 sc
CM
553.5 214.25 m
553.5 225.75 l
584.5 225.75 l
584.5 231.5 l
595.5 220 l
584.5 208.5 l
584.5 214.25 l
h
553.5 214.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1184.5 324.75 m
1184.5 313.25 l
1215.5 313.25 l
1215.5 307.5 l
1226.5 319 l
1215.5 330.5 l
1215.5 324.75 l
h
1184.5 324.75 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 574.5 237.5 cm
/F2.1[ 12 0 0 -12 0 0]sf
-18.450001 3.8320007 m
(.$2*3$)[ 3.780000 6.444000 7.116000 6.672000 6.444000 0.000000 ] xS
/Cs2 SC
0.75 0.75 1 sc
CM
553.5 175.25 m
553.5 186.75 l
584.5 186.75 l
584.5 192.5 l
595.5 181 l
584.5 169.5 l
584.5 175.25 l
h
553.5 175.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1184.5 363.75 m
1184.5 352.25 l
1215.5 352.25 l
1215.5 346.5 l
1226.5 358 l
1215.5 369.5 l
1215.5 363.75 l
h
1184.5 363.75 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 574.5 198.5 cm
-18.450001 3.8320007 m
(.$2*3$)[ 3.780000 6.444000 7.116000 6.672000 6.444000 0.000000 ] xS
/Cs2 SC
0.75 0.75 1 sc
CM
553.5 84.25 m
553.5 95.75 l
584.5 95.75 l
584.5 101.5 l
595.5 90 l
584.5 78.5 l
584.5 84.25 l
h
553.5 84.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1184.5 454.75 m
1184.5 443.25 l
1215.5 443.25 l
1215.5 437.5 l
1226.5 449 l
1215.5 460.5 l
1215.5 454.75 l
h
1184.5 454.75 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 574.5 107.5 cm
-18.450001 3.8320007 m
(.$2*3$)[ 3.780000 6.444000 7.116000 6.672000 6.444000 0.000000 ] xS
/Cs2 SC
1 0 0 sc
CM
645.03125 241 m
687.03125 223.5 l
645.03125 206 l
603.03125 223.5 l
h
645.03125 241 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1276.0312 298 m
1318.0312 315.5 l
1276.0312 333 l
1234.0312 315.5 l
h
1276.0312 298 m
S
1 1 1 sc
0 i
1 0 0 -1 645.03125 223.5 cm
/F1.1[ 13 0 0 -13 0 0]sf
-22.559999 4.1500001 m
(!"#$%&)[ 7.800000 7.800000 7.800000 7.800000 7.800000 0.000000 ] xS
1 0 1 sc
CM
645.03125 200 m
687.03125 182.5 l
645.03125 165 l
603.03125 182.5 l
h
645.03125 200 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1276.0312 339 m
1318.0312 356.5 l
1276.0312 374 l
1234.0312 356.5 l
h
1276.0312 339 m
S
1 1 1 sc
0 i
1 0 0 -1 645.03125 182.5 cm
-18.66 4.1500001 m
(\("#\)*)[ 7.800000 7.800000 7.800000 7.800000 0.000000 ] xS
1 0.25 0.25 sc
CM
708.43127 236 m
750.03125 236 l
739.63123 211 l
698.03125 211 l
h
708.43127 236 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1339.4313 303 m
1381.0312 303 l
1370.6312 328 l
1329.0312 328 l
h
1339.4313 303 m
S
1 1 1 sc
0 i
1 0 0 -1 724.03125 223.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-4.448 5.776001 m
(4)s
1 0.25 0.25 sc
CM
708.43127 195 m
750.03125 195 l
739.63123 170 l
698.03125 170 l
h
708.43127 195 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1339.4313 344 m
1381.0312 344 l
1370.6312 369 l
1329.0312 369 l
h
1339.4313 344 m
S
1 1 1 sc
0 i
1 0 0 -1 724.03125 182.5 cm
-4.448 5.776001 m
(5)s
0 1 0 sc
CM
645.03125 108 m
687.03125 90.5 l
645.03125 73 l
603.03125 90.5 l
h
645.03125 108 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1276.0312 431 m
1318.0312 448.5 l
1276.0312 466 l
1234.0312 448.5 l
h
1276.0312 431 m
S
0 i
1 0 0 -1 645.03125 90.5 cm
/F1.1[ 13 0 0 -13 0 0]sf
-10.86 4.1500001 m
(,-\))[ 7.800000 7.800000 0.000000 ] xS
1 0.25 0.25 sc
CM
708.43127 103.5 m
750.03125 103.5 l
739.63123 78.5 l
698.03125 78.5 l
h
708.43127 103.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -631 539 cm
1339.4313 435.5 m
1381.0312 435.5 l
1370.6312 460.5 l
1329.0312 460.5 l
h
1339.4313 435.5 m
S
1 1 1 sc
0 i
1 0 0 -1 724.03125 91 cm
/F2.1[ 16 0 0 -16 0 0]sf
-4.448 5.776001 m
(6)s
/Cs1 SC
0 sc
1 0 0 -1 690.5 146 cm
/F2.1[ 10 0 0 -10 0 0]sf
-1.39 -8.4199982 m
(!)s
-1.39 3.8600006 m
(!)s
-1.39 16.139999 m
(!)s
1 0 0 -1 681.53125 308 cm
/F2.1[ 16 0 0 -16 0 0]sf
-82.695999 5.776001 m
(7*8,*8+#$%&'\(\)*$+,\(-./)[ 12.160000 8.896000 5.040000 9.488000 8.896000 5.040000 4.448000 10.672000 8.592000 8.000000 6.224000 8.896000 8.592000 3.552000 8.896000 8.592000 4.448000 9.488000 8.592000 3.552000 5.328000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
